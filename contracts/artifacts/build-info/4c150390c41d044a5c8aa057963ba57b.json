{
	"id": "4c150390c41d044a5c8aa057963ba57b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract Bank{\n    mapping (address => uint) deposited;\n\n    address public immutable token;\n\n    constructor(address _token) {\n        token = _token;\n    }\n\n    function myBalance() public view returns (uint balance) {\n        balance = deposited[msg.sender]/(10**18);\n    }\n \n    function deposit(uint amount) public {\n        amount = amount * 10 ** 18;\n        require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"transfer error\");\n        deposited[msg.sender] += amount;\n    }\n\n    modifier requireBalance(uint amount){\n        amount = amount * 10 ** 18;\n        uint balance = deposited[msg.sender];\n        require(amount <= balance, \"not enough balance\");\n        _;\n    }\n\n    function withdraw(uint amount) external requireBalance(amount){\n        amount = amount * 10 ** 18;\n        SafeERC20.safeTransfer(IERC20(token), msg.sender, amount);\n        deposited[msg.sender] -= amount;\n    }\n\n    function bankTransfer(address to, uint amount) public requireBalance(amount){\n        amount = amount * 10 ** 18;\n        SafeERC20.safeTransfer(IERC20(token), to, amount);\n        deposited[to] += amount;\n        deposited[msg.sender] -= amount;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "bankTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Bank.sol\":181:1362  contract Bank{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Bank.sol\":279:338  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Bank.sol\":325:331  _token */\n  dup1\n    /* \"contracts/Bank.sol\":317:331  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Bank.sol\":279:338  constructor(address _token) {... */\n  pop\n    /* \"contracts/Bank.sol\":181:1362  contract Bank{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Bank.sol\":181:1362  contract Bank{... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Bank.sol\":181:1362  contract Bank{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6034114a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc9116b69\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Bank.sol\":889:1102  function withdraw(uint amount) external requireBalance(amount){... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/Bank.sol\":1108:1360  function bankTransfer(address to, uint amount) public requireBalance(amount){... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Bank.sol\":464:683  function deposit(uint amount) public {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/Bank.sol\":344:457  function myBalance() public view returns (uint balance) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":242:272  address public immutable token */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":889:1102  function withdraw(uint amount) external requireBalance(amount){... */\n    tag_11:\n        /* \"contracts/Bank.sol\":944:950  amount */\n      dup1\n        /* \"contracts/Bank.sol\":753:761  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":744:750  amount */\n      dup2\n        /* \"contracts/Bank.sol\":744:761  amount * 10 ** 18 */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"contracts/Bank.sol\":735:761  amount = amount * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":771:783  uint balance */\n      0x00\n        /* \"contracts/Bank.sol\":786:795  deposited */\n      dup1\n        /* \"contracts/Bank.sol\":786:807  deposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":796:806  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":786:807  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":771:807  uint balance = deposited[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":835:842  balance */\n      dup1\n        /* \"contracts/Bank.sol\":825:831  amount */\n      dup3\n        /* \"contracts/Bank.sol\":825:842  amount <= balance */\n      gt\n      iszero\n        /* \"contracts/Bank.sol\":817:865  require(amount <= balance, \"not enough balance\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"contracts/Bank.sol\":979:987  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":970:976  amount */\n      dup4\n        /* \"contracts/Bank.sol\":970:987  amount * 10 ** 18 */\n      tag_34\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"contracts/Bank.sol\":961:987  amount = amount * 10 ** 18 */\n      swap3\n      pop\n        /* \"contracts/Bank.sol\":997:1054  SafeERC20.safeTransfer(IERC20(token), msg.sender, amount) */\n      tag_35\n        /* \"contracts/Bank.sol\":1027:1032  token */\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n        /* \"contracts/Bank.sol\":1035:1045  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1047:1053  amount */\n      dup6\n        /* \"contracts/Bank.sol\":997:1019  SafeERC20.safeTransfer */\n      tag_36\n        /* \"contracts/Bank.sol\":997:1054  SafeERC20.safeTransfer(IERC20(token), msg.sender, amount) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/Bank.sol\":1089:1095  amount */\n      dup3\n        /* \"contracts/Bank.sol\":1064:1073  deposited */\n      0x00\n        /* \"contracts/Bank.sol\":1064:1085  deposited[msg.sender] */\n      dup1\n        /* \"contracts/Bank.sol\":1074:1084  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1064:1085  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1064:1095  deposited[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":725:883  {... */\n      pop\n        /* \"contracts/Bank.sol\":889:1102  function withdraw(uint amount) external requireBalance(amount){... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bank.sol\":1108:1360  function bankTransfer(address to, uint amount) public requireBalance(amount){... */\n    tag_15:\n        /* \"contracts/Bank.sol\":1177:1183  amount */\n      dup1\n        /* \"contracts/Bank.sol\":753:761  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":744:750  amount */\n      dup2\n        /* \"contracts/Bank.sol\":744:761  amount * 10 ** 18 */\n      tag_40\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"contracts/Bank.sol\":735:761  amount = amount * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":771:783  uint balance */\n      0x00\n        /* \"contracts/Bank.sol\":786:795  deposited */\n      dup1\n        /* \"contracts/Bank.sol\":786:807  deposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":796:806  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":786:807  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":771:807  uint balance = deposited[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":835:842  balance */\n      dup1\n        /* \"contracts/Bank.sol\":825:831  amount */\n      dup3\n        /* \"contracts/Bank.sol\":825:842  amount <= balance */\n      gt\n      iszero\n        /* \"contracts/Bank.sol\":817:865  require(amount <= balance, \"not enough balance\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_32\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"contracts/Bank.sol\":1212:1220  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":1203:1209  amount */\n      dup4\n        /* \"contracts/Bank.sol\":1203:1220  amount * 10 ** 18 */\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n        /* \"contracts/Bank.sol\":1194:1220  amount = amount * 10 ** 18 */\n      swap3\n      pop\n        /* \"contracts/Bank.sol\":1230:1279  SafeERC20.safeTransfer(IERC20(token), to, amount) */\n      tag_45\n        /* \"contracts/Bank.sol\":1260:1265  token */\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n        /* \"contracts/Bank.sol\":1268:1270  to */\n      dup6\n        /* \"contracts/Bank.sol\":1272:1278  amount */\n      dup6\n        /* \"contracts/Bank.sol\":1230:1252  SafeERC20.safeTransfer */\n      tag_36\n        /* \"contracts/Bank.sol\":1230:1279  SafeERC20.safeTransfer(IERC20(token), to, amount) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Bank.sol\":1306:1312  amount */\n      dup3\n        /* \"contracts/Bank.sol\":1289:1298  deposited */\n      0x00\n        /* \"contracts/Bank.sol\":1289:1302  deposited[to] */\n      dup1\n        /* \"contracts/Bank.sol\":1299:1301  to */\n      dup7\n        /* \"contracts/Bank.sol\":1289:1302  deposited[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1289:1312  deposited[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1347:1353  amount */\n      dup3\n        /* \"contracts/Bank.sol\":1322:1331  deposited */\n      0x00\n        /* \"contracts/Bank.sol\":1322:1343  deposited[msg.sender] */\n      dup1\n        /* \"contracts/Bank.sol\":1332:1342  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1322:1343  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1322:1353  deposited[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_48\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_48:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":725:883  {... */\n      pop\n        /* \"contracts/Bank.sol\":1108:1360  function bankTransfer(address to, uint amount) public requireBalance(amount){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bank.sol\":464:683  function deposit(uint amount) public {... */\n    tag_18:\n        /* \"contracts/Bank.sol\":529:537  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":520:526  amount */\n      dup2\n        /* \"contracts/Bank.sol\":520:537  amount * 10 ** 18 */\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n        /* \"contracts/Bank.sol\":511:537  amount = amount * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":562:567  token */\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n        /* \"contracts/Bank.sol\":555:581  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Bank.sol\":582:592  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":602:606  this */\n      address\n        /* \"contracts/Bank.sol\":609:615  amount */\n      dup5\n        /* \"contracts/Bank.sol\":555:616  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/Bank.sol\":547:635  require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"transfer error\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/Bank.sol\":670:676  amount */\n      dup1\n        /* \"contracts/Bank.sol\":645:654  deposited */\n      0x00\n        /* \"contracts/Bank.sol\":645:666  deposited[msg.sender] */\n      dup1\n        /* \"contracts/Bank.sol\":655:665  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":645:666  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":645:676  deposited[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_60\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_60:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":464:683  function deposit(uint amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Bank.sol\":344:457  function myBalance() public view returns (uint balance) {... */\n    tag_20:\n        /* \"contracts/Bank.sol\":386:398  uint balance */\n      0x00\n        /* \"contracts/Bank.sol\":443:449  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Bank.sol\":420:429  deposited */\n      0x00\n        /* \"contracts/Bank.sol\":420:441  deposited[msg.sender] */\n      dup1\n        /* \"contracts/Bank.sol\":430:440  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":420:441  deposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":420:450  deposited[msg.sender]/(10**18) */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/Bank.sol\":410:450  balance = deposited[msg.sender]/(10**18) */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":344:457  function myBalance() public view returns (uint balance) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bank.sol\":242:272  address public immutable token */\n    tag_24:\n      immutable(\"0xc5fad44e3727a4ce457d020cb0c6daf6b7d8f8d9551f2fa0111b8c9f86d3fe43\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_70\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_72)\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_76:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_78:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_79:\n        /* \"#utility.yul\":490:514   */\n      tag_103\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_78\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_104:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_80:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_106\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_79\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_109\n      tag_76\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":766:885   */\n    tag_108:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_110\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_80\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_81:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_82:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_113\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_81\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_83:\n        /* \"#utility.yul\":1332:1356   */\n      tag_115\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_82\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_116:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_84:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_118\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_83\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:2006   */\n    tag_14:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1657:1659   */\n      0x40\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1636:1643   */\n      dup6\n        /* \"#utility.yul\":1632:1655   */\n      sub\n        /* \"#utility.yul\":1628:1660   */\n      slt\n        /* \"#utility.yul\":1625:1744   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":1663:1742   */\n      tag_121\n      tag_76\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1625:1744   */\n    tag_120:\n        /* \"#utility.yul\":1783:1784   */\n      0x00\n        /* \"#utility.yul\":1808:1861   */\n      tag_122\n        /* \"#utility.yul\":1853:1860   */\n      dup6\n        /* \"#utility.yul\":1844:1850   */\n      dup3\n        /* \"#utility.yul\":1833:1842   */\n      dup7\n        /* \"#utility.yul\":1829:1851   */\n      add\n        /* \"#utility.yul\":1808:1861   */\n      tag_84\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1798:1861   */\n      swap3\n      pop\n        /* \"#utility.yul\":1754:1871   */\n      pop\n        /* \"#utility.yul\":1910:1912   */\n      0x20\n        /* \"#utility.yul\":1936:1989   */\n      tag_123\n        /* \"#utility.yul\":1981:1988   */\n      dup6\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup7\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_80\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1999   */\n      pop\n        /* \"#utility.yul\":1532:2006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_85:\n        /* \"#utility.yul\":2099:2123   */\n      tag_125\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_78\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_22:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_127\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_85\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_86:\n        /* \"#utility.yul\":2451:2475   */\n      tag_129\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_82\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_26:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_131\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_86\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2896   */\n    tag_87:\n        /* \"#utility.yul\":2764:2841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2842   */\n      mstore\n        /* \"#utility.yul\":2861:2865   */\n      0x11\n        /* \"#utility.yul\":2858:2859   */\n      0x04\n        /* \"#utility.yul\":2851:2866   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2902:3312   */\n    tag_29:\n        /* \"#utility.yul\":2942:2949   */\n      0x00\n        /* \"#utility.yul\":2965:2985   */\n      tag_134\n        /* \"#utility.yul\":2983:2984   */\n      dup3\n        /* \"#utility.yul\":2965:2985   */\n      tag_78\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2960:2985   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3019   */\n      tag_135\n        /* \"#utility.yul\":3017:3018   */\n      dup4\n        /* \"#utility.yul\":2999:3019   */\n      tag_78\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2994:3019   */\n      swap3\n      pop\n        /* \"#utility.yul\":3054:3055   */\n      dup3\n        /* \"#utility.yul\":3051:3052   */\n      dup3\n        /* \"#utility.yul\":3047:3056   */\n      mul\n        /* \"#utility.yul\":3076:3106   */\n      tag_136\n        /* \"#utility.yul\":3094:3105   */\n      dup2\n        /* \"#utility.yul\":3076:3106   */\n      tag_78\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3065:3106   */\n      swap2\n      pop\n        /* \"#utility.yul\":3255:3256   */\n      dup3\n        /* \"#utility.yul\":3246:3253   */\n      dup3\n        /* \"#utility.yul\":3242:3257   */\n      div\n        /* \"#utility.yul\":3239:3240   */\n      dup5\n        /* \"#utility.yul\":3236:3258   */\n      eq\n        /* \"#utility.yul\":3216:3217   */\n      dup4\n        /* \"#utility.yul\":3209:3218   */\n      iszero\n        /* \"#utility.yul\":3189:3272   */\n      or\n        /* \"#utility.yul\":3166:3305   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3285:3303   */\n      tag_138\n      tag_87\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3166:3305   */\n    tag_137:\n        /* \"#utility.yul\":2950:3312   */\n      pop\n        /* \"#utility.yul\":2902:3312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3487   */\n    tag_88:\n        /* \"#utility.yul\":3402:3413   */\n      0x00\n        /* \"#utility.yul\":3436:3442   */\n      dup3\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3424:3443   */\n      mstore\n        /* \"#utility.yul\":3476:3480   */\n      0x20\n        /* \"#utility.yul\":3471:3474   */\n      dup3\n        /* \"#utility.yul\":3467:3481   */\n      add\n        /* \"#utility.yul\":3452:3481   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3661   */\n    tag_89:\n        /* \"#utility.yul\":3633:3653   */\n      0x6e6f7420656e6f7567682062616c616e63650000000000000000000000000000\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3621:3627   */\n      dup3\n        /* \"#utility.yul\":3617:3631   */\n      add\n        /* \"#utility.yul\":3610:3654   */\n      mstore\n        /* \"#utility.yul\":3493:3661   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3667:4033   */\n    tag_90:\n        /* \"#utility.yul\":3809:3812   */\n      0x00\n        /* \"#utility.yul\":3830:3897   */\n      tag_142\n        /* \"#utility.yul\":3894:3896   */\n      0x12\n        /* \"#utility.yul\":3889:3892   */\n      dup4\n        /* \"#utility.yul\":3830:3897   */\n      tag_88\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3823:3897   */\n      swap2\n      pop\n        /* \"#utility.yul\":3906:3999   */\n      tag_143\n        /* \"#utility.yul\":3995:3998   */\n      dup3\n        /* \"#utility.yul\":3906:3999   */\n      tag_89\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4024:4026   */\n      0x20\n        /* \"#utility.yul\":4019:4022   */\n      dup3\n        /* \"#utility.yul\":4015:4027   */\n      add\n        /* \"#utility.yul\":4008:4027   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:4033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4039:4458   */\n    tag_32:\n        /* \"#utility.yul\":4205:4209   */\n      0x00\n        /* \"#utility.yul\":4243:4245   */\n      0x20\n        /* \"#utility.yul\":4232:4241   */\n      dup3\n        /* \"#utility.yul\":4228:4246   */\n      add\n        /* \"#utility.yul\":4220:4246   */\n      swap1\n      pop\n        /* \"#utility.yul\":4292:4301   */\n      dup2\n        /* \"#utility.yul\":4286:4290   */\n      dup2\n        /* \"#utility.yul\":4282:4302   */\n      sub\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4267:4276   */\n      dup4\n        /* \"#utility.yul\":4263:4280   */\n      add\n        /* \"#utility.yul\":4256:4303   */\n      mstore\n        /* \"#utility.yul\":4320:4451   */\n      tag_145\n        /* \"#utility.yul\":4446:4450   */\n      dup2\n        /* \"#utility.yul\":4320:4451   */\n      tag_90\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4312:4451   */\n      swap1\n      pop\n        /* \"#utility.yul\":4039:4458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4658   */\n    tag_38:\n        /* \"#utility.yul\":4504:4508   */\n      0x00\n        /* \"#utility.yul\":4524:4544   */\n      tag_147\n        /* \"#utility.yul\":4542:4543   */\n      dup3\n        /* \"#utility.yul\":4524:4544   */\n      tag_78\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4519:4544   */\n      swap2\n      pop\n        /* \"#utility.yul\":4558:4578   */\n      tag_148\n        /* \"#utility.yul\":4576:4577   */\n      dup4\n        /* \"#utility.yul\":4558:4578   */\n      tag_78\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4553:4578   */\n      swap3\n      pop\n        /* \"#utility.yul\":4602:4603   */\n      dup3\n        /* \"#utility.yul\":4599:4600   */\n      dup3\n        /* \"#utility.yul\":4595:4604   */\n      sub\n        /* \"#utility.yul\":4587:4604   */\n      swap1\n      pop\n        /* \"#utility.yul\":4626:4627   */\n      dup2\n        /* \"#utility.yul\":4620:4624   */\n      dup2\n        /* \"#utility.yul\":4617:4628   */\n      gt\n        /* \"#utility.yul\":4614:4651   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":4631:4649   */\n      tag_150\n      tag_87\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4614:4651   */\n    tag_149:\n        /* \"#utility.yul\":4464:4658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4664:4855   */\n    tag_47:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4723:4743   */\n      tag_152\n        /* \"#utility.yul\":4741:4742   */\n      dup3\n        /* \"#utility.yul\":4723:4743   */\n      tag_78\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4718:4743   */\n      swap2\n      pop\n        /* \"#utility.yul\":4757:4777   */\n      tag_153\n        /* \"#utility.yul\":4775:4776   */\n      dup4\n        /* \"#utility.yul\":4757:4777   */\n      tag_78\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4752:4777   */\n      swap3\n      pop\n        /* \"#utility.yul\":4800:4801   */\n      dup3\n        /* \"#utility.yul\":4797:4798   */\n      dup3\n        /* \"#utility.yul\":4793:4802   */\n      add\n        /* \"#utility.yul\":4786:4802   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4824   */\n      dup1\n        /* \"#utility.yul\":4818:4819   */\n      dup3\n        /* \"#utility.yul\":4815:4825   */\n      gt\n        /* \"#utility.yul\":4812:4848   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4828:4846   */\n      tag_155\n      tag_87\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4812:4848   */\n    tag_154:\n        /* \"#utility.yul\":4664:4855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5303   */\n    tag_52:\n        /* \"#utility.yul\":5010:5014   */\n      0x00\n        /* \"#utility.yul\":5048:5050   */\n      0x60\n        /* \"#utility.yul\":5037:5046   */\n      dup3\n        /* \"#utility.yul\":5033:5051   */\n      add\n        /* \"#utility.yul\":5025:5051   */\n      swap1\n      pop\n        /* \"#utility.yul\":5061:5132   */\n      tag_157\n        /* \"#utility.yul\":5129:5130   */\n      0x00\n        /* \"#utility.yul\":5118:5127   */\n      dup4\n        /* \"#utility.yul\":5114:5131   */\n      add\n        /* \"#utility.yul\":5105:5111   */\n      dup7\n        /* \"#utility.yul\":5061:5132   */\n      tag_86\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5142:5214   */\n      tag_158\n        /* \"#utility.yul\":5210:5212   */\n      0x20\n        /* \"#utility.yul\":5199:5208   */\n      dup4\n        /* \"#utility.yul\":5195:5213   */\n      add\n        /* \"#utility.yul\":5186:5192   */\n      dup6\n        /* \"#utility.yul\":5142:5214   */\n      tag_86\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5224:5296   */\n      tag_159\n        /* \"#utility.yul\":5292:5294   */\n      0x40\n        /* \"#utility.yul\":5281:5290   */\n      dup4\n        /* \"#utility.yul\":5277:5295   */\n      add\n        /* \"#utility.yul\":5268:5274   */\n      dup5\n        /* \"#utility.yul\":5224:5296   */\n      tag_85\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4861:5303   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5399   */\n    tag_91:\n        /* \"#utility.yul\":5343:5350   */\n      0x00\n        /* \"#utility.yul\":5386:5391   */\n      dup2\n        /* \"#utility.yul\":5379:5392   */\n      iszero\n        /* \"#utility.yul\":5372:5393   */\n      iszero\n        /* \"#utility.yul\":5361:5393   */\n      swap1\n      pop\n        /* \"#utility.yul\":5309:5399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5405:5521   */\n    tag_92:\n        /* \"#utility.yul\":5475:5496   */\n      tag_162\n        /* \"#utility.yul\":5490:5495   */\n      dup2\n        /* \"#utility.yul\":5475:5496   */\n      tag_91\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5468:5473   */\n      dup2\n        /* \"#utility.yul\":5465:5497   */\n      eq\n        /* \"#utility.yul\":5455:5515   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":5511:5512   */\n      0x00\n        /* \"#utility.yul\":5508:5509   */\n      dup1\n        /* \"#utility.yul\":5501:5513   */\n      revert\n        /* \"#utility.yul\":5455:5515   */\n    tag_163:\n        /* \"#utility.yul\":5405:5521   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5527:5664   */\n    tag_93:\n        /* \"#utility.yul\":5581:5586   */\n      0x00\n        /* \"#utility.yul\":5612:5618   */\n      dup2\n        /* \"#utility.yul\":5606:5619   */\n      mload\n        /* \"#utility.yul\":5597:5619   */\n      swap1\n      pop\n        /* \"#utility.yul\":5628:5658   */\n      tag_165\n        /* \"#utility.yul\":5652:5657   */\n      dup2\n        /* \"#utility.yul\":5628:5658   */\n      tag_92\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5527:5664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5670:6015   */\n    tag_56:\n        /* \"#utility.yul\":5737:5743   */\n      0x00\n        /* \"#utility.yul\":5786:5788   */\n      0x20\n        /* \"#utility.yul\":5774:5783   */\n      dup3\n        /* \"#utility.yul\":5765:5772   */\n      dup5\n        /* \"#utility.yul\":5761:5784   */\n      sub\n        /* \"#utility.yul\":5757:5789   */\n      slt\n        /* \"#utility.yul\":5754:5873   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":5792:5871   */\n      tag_168\n      tag_76\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5754:5873   */\n    tag_167:\n        /* \"#utility.yul\":5912:5913   */\n      0x00\n        /* \"#utility.yul\":5937:5998   */\n      tag_169\n        /* \"#utility.yul\":5990:5997   */\n      dup5\n        /* \"#utility.yul\":5981:5987   */\n      dup3\n        /* \"#utility.yul\":5970:5979   */\n      dup6\n        /* \"#utility.yul\":5966:5988   */\n      add\n        /* \"#utility.yul\":5937:5998   */\n      tag_93\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5927:5998   */\n      swap2\n      pop\n        /* \"#utility.yul\":5883:6008   */\n      pop\n        /* \"#utility.yul\":5670:6015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6021:6185   */\n    tag_94:\n        /* \"#utility.yul\":6161:6177   */\n      0x7472616e73666572206572726f72000000000000000000000000000000000000\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6149:6155   */\n      dup3\n        /* \"#utility.yul\":6145:6159   */\n      add\n        /* \"#utility.yul\":6138:6178   */\n      mstore\n        /* \"#utility.yul\":6021:6185   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6191:6557   */\n    tag_95:\n        /* \"#utility.yul\":6333:6336   */\n      0x00\n        /* \"#utility.yul\":6354:6421   */\n      tag_172\n        /* \"#utility.yul\":6418:6420   */\n      0x0e\n        /* \"#utility.yul\":6413:6416   */\n      dup4\n        /* \"#utility.yul\":6354:6421   */\n      tag_88\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6347:6421   */\n      swap2\n      pop\n        /* \"#utility.yul\":6430:6523   */\n      tag_173\n        /* \"#utility.yul\":6519:6522   */\n      dup3\n        /* \"#utility.yul\":6430:6523   */\n      tag_94\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6548:6550   */\n      0x20\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6539:6551   */\n      add\n        /* \"#utility.yul\":6532:6551   */\n      swap1\n      pop\n        /* \"#utility.yul\":6191:6557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6982   */\n    tag_59:\n        /* \"#utility.yul\":6729:6733   */\n      0x00\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6756:6765   */\n      dup3\n        /* \"#utility.yul\":6752:6770   */\n      add\n        /* \"#utility.yul\":6744:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6816:6825   */\n      dup2\n        /* \"#utility.yul\":6810:6814   */\n      dup2\n        /* \"#utility.yul\":6806:6826   */\n      sub\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6791:6800   */\n      dup4\n        /* \"#utility.yul\":6787:6804   */\n      add\n        /* \"#utility.yul\":6780:6827   */\n      mstore\n        /* \"#utility.yul\":6844:6975   */\n      tag_175\n        /* \"#utility.yul\":6970:6974   */\n      dup2\n        /* \"#utility.yul\":6844:6975   */\n      tag_95\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6836:6975   */\n      swap1\n      pop\n        /* \"#utility.yul\":6563:6982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6988:7168   */\n    tag_96:\n        /* \"#utility.yul\":7036:7113   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7026:7114   */\n      mstore\n        /* \"#utility.yul\":7133:7137   */\n      0x12\n        /* \"#utility.yul\":7130:7131   */\n      0x04\n        /* \"#utility.yul\":7123:7138   */\n      mstore\n        /* \"#utility.yul\":7157:7161   */\n      0x24\n        /* \"#utility.yul\":7154:7155   */\n      0x00\n        /* \"#utility.yul\":7147:7162   */\n      revert\n        /* \"#utility.yul\":7174:7359   */\n    tag_63:\n        /* \"#utility.yul\":7214:7215   */\n      0x00\n        /* \"#utility.yul\":7231:7251   */\n      tag_178\n        /* \"#utility.yul\":7249:7250   */\n      dup3\n        /* \"#utility.yul\":7231:7251   */\n      tag_78\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7226:7251   */\n      swap2\n      pop\n        /* \"#utility.yul\":7265:7285   */\n      tag_179\n        /* \"#utility.yul\":7283:7284   */\n      dup4\n        /* \"#utility.yul\":7265:7285   */\n      tag_78\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7260:7285   */\n      swap3\n      pop\n        /* \"#utility.yul\":7304:7305   */\n      dup3\n        /* \"#utility.yul\":7294:7329   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":7309:7327   */\n      tag_181\n      tag_96\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7294:7329   */\n    tag_180:\n        /* \"#utility.yul\":7351:7352   */\n      dup3\n        /* \"#utility.yul\":7348:7349   */\n      dup3\n        /* \"#utility.yul\":7344:7353   */\n      div\n        /* \"#utility.yul\":7339:7353   */\n      swap1\n      pop\n        /* \"#utility.yul\":7174:7359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7365:7697   */\n    tag_67:\n        /* \"#utility.yul\":7486:7490   */\n      0x00\n        /* \"#utility.yul\":7524:7526   */\n      0x40\n        /* \"#utility.yul\":7513:7522   */\n      dup3\n        /* \"#utility.yul\":7509:7527   */\n      add\n        /* \"#utility.yul\":7501:7527   */\n      swap1\n      pop\n        /* \"#utility.yul\":7537:7608   */\n      tag_183\n        /* \"#utility.yul\":7605:7606   */\n      0x00\n        /* \"#utility.yul\":7594:7603   */\n      dup4\n        /* \"#utility.yul\":7590:7607   */\n      add\n        /* \"#utility.yul\":7581:7587   */\n      dup6\n        /* \"#utility.yul\":7537:7608   */\n      tag_86\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7618:7690   */\n      tag_184\n        /* \"#utility.yul\":7686:7688   */\n      0x20\n        /* \"#utility.yul\":7675:7684   */\n      dup4\n        /* \"#utility.yul\":7671:7689   */\n      add\n        /* \"#utility.yul\":7662:7668   */\n      dup5\n        /* \"#utility.yul\":7618:7690   */\n      tag_85\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7365:7697   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a9acde5d32514636bd0978a673cfec0ad963beee0f92510b6594b9c525fb931764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_891": {
									"entryPoint": null,
									"id": 891,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:9",
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "922:274:9",
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:9",
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nativeSrc": "970:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nativeSrc": "970:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nativeSrc": "939:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:9",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nativeSrc": "935:32:9",
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nativeSrc": "932:119:9",
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nativeSrc": "1061:128:9",
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nativeSrc": "1076:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nativeSrc": "1147:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nativeSrc": "1115:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:9",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:9",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:9",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610be9380380610be9833981810160405281019061003191906100c9565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100f4565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b6100a88161008e565b81146100b2575f80fd5b50565b5f815190506100c38161009f565b92915050565b5f602082840312156100de576100dd61006b565b5b5f6100eb848285016100b5565b91505092915050565b608051610ac86101215f395f818161019e015281816102d0015281816103b8015261053f0152610ac85ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632e1a7d4d146100595780636034114a14610075578063b6b55f2514610091578063c9116b69146100ad578063fc0c546a146100cb575b5f80fd5b610073600480360381019061006e91906106b2565b6100e9565b005b61008f600480360381019061008a9190610737565b61021b565b005b6100ab60048036038101906100a691906106b2565b6103a0565b005b6100b56104e7565b6040516100c29190610784565b60405180910390f35b6100d361053d565b6040516100e091906107ac565b60405180910390f35b80670de0b6b3a7640000816100fe91906107f2565b90505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821115610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061088d565b60405180910390fd5b670de0b6b3a76400008361019791906107f2565b92506101c47f00000000000000000000000000000000000000000000000000000000000000003385610561565b825f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020f91906108ab565b92505081905550505050565b80670de0b6b3a76400008161023091906107f2565b90505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050808211156102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac9061088d565b60405180910390fd5b670de0b6b3a7640000836102c991906107f2565b92506102f67f00000000000000000000000000000000000000000000000000000000000000008585610561565b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034191906108de565b92505081905550825f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461039391906108ab565b9250508190555050505050565b670de0b6b3a7640000816103b491906107f2565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161041393929190610911565b6020604051808303815f875af115801561042f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610453919061097b565b610492576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610489906109f0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104dd91906108de565b9250508190555050565b5f670de0b6b3a76400005f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105389190610a3b565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105db838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610594929190610a6b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105e0565b505050565b5f8060205f8451602086015f885af1806105ff576040513d5f823e3d81fd5b3d92505f519150505f8214610618576001811415610633565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561067557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161066c91906107ac565b60405180910390fd5b50505050565b5f80fd5b5f819050919050565b6106918161067f565b811461069b575f80fd5b50565b5f813590506106ac81610688565b92915050565b5f602082840312156106c7576106c661067b565b5b5f6106d48482850161069e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610706826106dd565b9050919050565b610716816106fc565b8114610720575f80fd5b50565b5f813590506107318161070d565b92915050565b5f806040838503121561074d5761074c61067b565b5b5f61075a85828601610723565b925050602061076b8582860161069e565b9150509250929050565b61077e8161067f565b82525050565b5f6020820190506107975f830184610775565b92915050565b6107a6816106fc565b82525050565b5f6020820190506107bf5f83018461079d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107fc8261067f565b91506108078361067f565b92508282026108158161067f565b9150828204841483151761082c5761082b6107c5565b5b5092915050565b5f82825260208201905092915050565b7f6e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f610877601283610833565b915061088282610843565b602082019050919050565b5f6020820190508181035f8301526108a48161086b565b9050919050565b5f6108b58261067f565b91506108c08361067f565b92508282039050818111156108d8576108d76107c5565b5b92915050565b5f6108e88261067f565b91506108f38361067f565b925082820190508082111561090b5761090a6107c5565b5b92915050565b5f6060820190506109245f83018661079d565b610931602083018561079d565b61093e6040830184610775565b949350505050565b5f8115159050919050565b61095a81610946565b8114610964575f80fd5b50565b5f8151905061097581610951565b92915050565b5f602082840312156109905761098f61067b565b5b5f61099d84828501610967565b91505092915050565b7f7472616e73666572206572726f720000000000000000000000000000000000005f82015250565b5f6109da600e83610833565b91506109e5826109a6565b602082019050919050565b5f6020820190508181035f830152610a07816109ce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a458261067f565b9150610a508361067f565b925082610a6057610a5f610a0e565b5b828204905092915050565b5f604082019050610a7e5f83018561079d565b610a8b6020830184610775565b939250505056fea2646970667358221220a9acde5d32514636bd0978a673cfec0ad963beee0f92510b6594b9c525fb931764736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBE9 CODESIZE SUB DUP1 PUSH2 0xBE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8 DUP2 PUSH2 0x8E JUMP JUMPDEST DUP2 EQ PUSH2 0xB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC3 DUP2 PUSH2 0x9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE JUMPI PUSH2 0xDD PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB DUP5 DUP3 DUP6 ADD PUSH2 0xB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAC8 PUSH2 0x121 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x19E ADD MSTORE DUP2 DUP2 PUSH2 0x2D0 ADD MSTORE DUP2 DUP2 PUSH2 0x3B8 ADD MSTORE PUSH2 0x53F ADD MSTORE PUSH2 0xAC8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6034114A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xC9116B69 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C4 PUSH32 0x0 CALLER DUP6 PUSH2 0x561 JUMP JUMPDEST DUP3 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x2F6 PUSH32 0x0 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x97B JUMP JUMPDEST PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x594 SWAP3 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x618 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x633 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x675 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x691 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AC DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x706 DUP3 PUSH2 0x6DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP2 EQ PUSH2 0x720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x731 DUP2 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x75A DUP6 DUP3 DUP7 ADD PUSH2 0x723 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x76B DUP6 DUP3 DUP7 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x77E DUP2 PUSH2 0x67F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x797 PUSH0 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BF PUSH0 DUP4 ADD DUP5 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7FC DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x807 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x815 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x877 PUSH1 0x12 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x882 DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A4 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B5 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E8 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x8F3 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x924 PUSH0 DUP4 ADD DUP7 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x931 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x93E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A DUP2 PUSH2 0x946 JUMP JUMPDEST DUP2 EQ PUSH2 0x964 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x975 DUP2 PUSH2 0x951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206572726F72000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9DA PUSH1 0xE DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA07 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA45 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0xA50 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA60 JUMPI PUSH2 0xA5F PUSH2 0xA0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA7E PUSH0 DUP4 ADD DUP6 PUSH2 0x79D JUMP JUMPDEST PUSH2 0xA8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xAC 0xDE TSTORE ORIGIN MLOAD CHAINID CALLDATASIZE 0xBD MULMOD PUSH25 0xA673CFEC0AD963BEEE0F92510B6594B9C525FB931764736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "181:1181:8:-:0;;;279:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;325:6;317:14;;;;;;;;;;279:59;181:1181;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;181:1181:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_536": {
									"entryPoint": 1504,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bankTransfer_1051": {
									"entryPoint": 539,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_946": {
									"entryPoint": 928,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@myBalance_909": {
									"entryPoint": 1255,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_214": {
									"entryPoint": 1377,
									"id": 214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_881": {
									"entryPoint": 1341,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1009": {
									"entryPoint": 233,
									"id": 1009,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7700:9",
										"nodeType": "YulBlock",
										"src": "0:7700:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "597:87:9",
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nativeSrc": "607:29:9",
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nativeSrc": "616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nativeSrc": "645:33:9",
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nativeSrc": "645:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:9",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:9",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:9",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nativeSrc": "756:263:9",
													"nodeType": "YulBlock",
													"src": "756:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:9",
																"nodeType": "YulBlock",
																"src": "802:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:9"
																			},
																			"nativeSrc": "804:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:9"
																		},
																		"nativeSrc": "804:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		},
																		"nativeSrc": "773:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:9",
																		"nodeType": "YulLiteral",
																		"src": "798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:9"
																},
																"nativeSrc": "769:32:9",
																"nodeType": "YulFunctionCall",
																"src": "769:32:9"
															},
															"nativeSrc": "766:119:9",
															"nodeType": "YulIf",
															"src": "766:119:9"
														},
														{
															"nativeSrc": "895:117:9",
															"nodeType": "YulBlock",
															"src": "895:117:9",
															"statements": [
																{
																	"nativeSrc": "910:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:9",
																			"nodeType": "YulTypedName",
																			"src": "914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:9",
																	"nodeType": "YulAssignment",
																	"src": "939:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:9"
																				},
																				"nativeSrc": "970:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:9"
																		},
																		"nativeSrc": "949:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:9",
														"nodeType": "YulTypedName",
														"src": "726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:9",
														"nodeType": "YulTypedName",
														"src": "737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:9",
														"nodeType": "YulTypedName",
														"src": "749:6:9",
														"type": ""
													}
												],
												"src": "690:329:9"
											},
											{
												"body": {
													"nativeSrc": "1070:81:9",
													"nodeType": "YulBlock",
													"src": "1070:81:9",
													"statements": [
														{
															"nativeSrc": "1080:65:9",
															"nodeType": "YulAssignment",
															"src": "1080:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:9"
																},
																"nativeSrc": "1091:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:9",
														"nodeType": "YulTypedName",
														"src": "1052:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:9",
														"nodeType": "YulTypedName",
														"src": "1062:7:9",
														"type": ""
													}
												],
												"src": "1025:126:9"
											},
											{
												"body": {
													"nativeSrc": "1202:51:9",
													"nodeType": "YulBlock",
													"src": "1202:51:9",
													"statements": [
														{
															"nativeSrc": "1212:35:9",
															"nodeType": "YulAssignment",
															"src": "1212:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:9"
																},
																"nativeSrc": "1223:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:9",
														"nodeType": "YulTypedName",
														"src": "1184:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:9",
														"nodeType": "YulTypedName",
														"src": "1194:7:9",
														"type": ""
													}
												],
												"src": "1157:96:9"
											},
											{
												"body": {
													"nativeSrc": "1302:79:9",
													"nodeType": "YulBlock",
													"src": "1302:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:9",
																"nodeType": "YulBlock",
																"src": "1359:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:9"
																			},
																			"nativeSrc": "1361:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:9"
																		},
																		"nativeSrc": "1361:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:9"
																				},
																				"nativeSrc": "1332:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:9"
																		},
																		"nativeSrc": "1322:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:9"
																},
																"nativeSrc": "1315:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:9"
															},
															"nativeSrc": "1312:63:9",
															"nodeType": "YulIf",
															"src": "1312:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:9",
														"nodeType": "YulTypedName",
														"src": "1295:5:9",
														"type": ""
													}
												],
												"src": "1259:122:9"
											},
											{
												"body": {
													"nativeSrc": "1439:87:9",
													"nodeType": "YulBlock",
													"src": "1439:87:9",
													"statements": [
														{
															"nativeSrc": "1449:29:9",
															"nodeType": "YulAssignment",
															"src": "1449:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:9"
																},
																"nativeSrc": "1458:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:9"
																},
																"nativeSrc": "1487:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:9"
															},
															"nativeSrc": "1487:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:9",
														"nodeType": "YulTypedName",
														"src": "1417:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:9",
														"nodeType": "YulTypedName",
														"src": "1425:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:9",
														"nodeType": "YulTypedName",
														"src": "1433:5:9",
														"type": ""
													}
												],
												"src": "1387:139:9"
											},
											{
												"body": {
													"nativeSrc": "1615:391:9",
													"nodeType": "YulBlock",
													"src": "1615:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1661:83:9",
																"nodeType": "YulBlock",
																"src": "1661:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1663:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1663:77:9"
																			},
																			"nativeSrc": "1663:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1663:79:9"
																		},
																		"nativeSrc": "1663:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1636:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1645:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1645:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1632:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:9"
																		},
																		"nativeSrc": "1632:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1632:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1628:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:9"
																},
																"nativeSrc": "1628:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1628:32:9"
															},
															"nativeSrc": "1625:119:9",
															"nodeType": "YulIf",
															"src": "1625:119:9"
														},
														{
															"nativeSrc": "1754:117:9",
															"nodeType": "YulBlock",
															"src": "1754:117:9",
															"statements": [
																{
																	"nativeSrc": "1769:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1769:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1783:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1773:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1773:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1798:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1798:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1833:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1833:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1844:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1844:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1829:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1829:3:9"
																				},
																				"nativeSrc": "1829:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1829:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1853:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1853:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1808:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1808:20:9"
																		},
																		"nativeSrc": "1808:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1798:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1798:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1881:118:9",
															"nodeType": "YulBlock",
															"src": "1881:118:9",
															"statements": [
																{
																	"nativeSrc": "1896:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1896:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1910:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1900:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1900:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1926:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1926:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1961:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1972:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1957:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:9"
																				},
																				"nativeSrc": "1957:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1981:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1936:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:9"
																		},
																		"nativeSrc": "1936:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1926:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1532:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1577:9:9",
														"nodeType": "YulTypedName",
														"src": "1577:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1588:7:9",
														"nodeType": "YulTypedName",
														"src": "1588:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1600:6:9",
														"nodeType": "YulTypedName",
														"src": "1600:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1608:6:9",
														"nodeType": "YulTypedName",
														"src": "1608:6:9",
														"type": ""
													}
												],
												"src": "1532:474:9"
											},
											{
												"body": {
													"nativeSrc": "2077:53:9",
													"nodeType": "YulBlock",
													"src": "2077:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2094:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2117:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2099:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:9"
																		},
																		"nativeSrc": "2099:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:9"
																},
																"nativeSrc": "2087:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2087:37:9"
															},
															"nativeSrc": "2087:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2012:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2065:5:9",
														"nodeType": "YulTypedName",
														"src": "2065:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2072:3:9",
														"nodeType": "YulTypedName",
														"src": "2072:3:9",
														"type": ""
													}
												],
												"src": "2012:118:9"
											},
											{
												"body": {
													"nativeSrc": "2234:124:9",
													"nodeType": "YulBlock",
													"src": "2234:124:9",
													"statements": [
														{
															"nativeSrc": "2244:26:9",
															"nodeType": "YulAssignment",
															"src": "2244:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2256:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2267:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2252:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:9"
																},
																"nativeSrc": "2252:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2252:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2244:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2324:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2337:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2333:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:9"
																		},
																		"nativeSrc": "2333:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2280:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:9"
																},
																"nativeSrc": "2280:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2280:71:9"
															},
															"nativeSrc": "2280:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2136:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2206:9:9",
														"nodeType": "YulTypedName",
														"src": "2206:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2218:6:9",
														"nodeType": "YulTypedName",
														"src": "2218:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2229:4:9",
														"nodeType": "YulTypedName",
														"src": "2229:4:9",
														"type": ""
													}
												],
												"src": "2136:222:9"
											},
											{
												"body": {
													"nativeSrc": "2429:53:9",
													"nodeType": "YulBlock",
													"src": "2429:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2446:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2469:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2451:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:9"
																		},
																		"nativeSrc": "2451:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:9"
																},
																"nativeSrc": "2439:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2439:37:9"
															},
															"nativeSrc": "2439:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2364:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2417:5:9",
														"nodeType": "YulTypedName",
														"src": "2417:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2424:3:9",
														"nodeType": "YulTypedName",
														"src": "2424:3:9",
														"type": ""
													}
												],
												"src": "2364:118:9"
											},
											{
												"body": {
													"nativeSrc": "2586:124:9",
													"nodeType": "YulBlock",
													"src": "2586:124:9",
													"statements": [
														{
															"nativeSrc": "2596:26:9",
															"nodeType": "YulAssignment",
															"src": "2596:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2608:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2604:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:9"
																},
																"nativeSrc": "2604:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2604:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2596:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2676:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2685:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:9"
																		},
																		"nativeSrc": "2685:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2632:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:9"
																},
																"nativeSrc": "2632:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2632:71:9"
															},
															"nativeSrc": "2632:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2488:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2558:9:9",
														"nodeType": "YulTypedName",
														"src": "2558:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2570:6:9",
														"nodeType": "YulTypedName",
														"src": "2570:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2581:4:9",
														"nodeType": "YulTypedName",
														"src": "2581:4:9",
														"type": ""
													}
												],
												"src": "2488:222:9"
											},
											{
												"body": {
													"nativeSrc": "2744:152:9",
													"nodeType": "YulBlock",
													"src": "2744:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2761:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2761:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2764:77:9",
																		"nodeType": "YulLiteral",
																		"src": "2764:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2754:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:9"
																},
																"nativeSrc": "2754:88:9",
																"nodeType": "YulFunctionCall",
																"src": "2754:88:9"
															},
															"nativeSrc": "2754:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "2754:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2858:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2858:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2861:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2861:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2851:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:9"
																},
																"nativeSrc": "2851:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2851:15:9"
															},
															"nativeSrc": "2851:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2851:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2882:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2882:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2885:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2875:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:9"
																},
																"nativeSrc": "2875:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2875:15:9"
															},
															"nativeSrc": "2875:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2875:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2716:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2716:180:9"
											},
											{
												"body": {
													"nativeSrc": "2950:362:9",
													"nodeType": "YulBlock",
													"src": "2950:362:9",
													"statements": [
														{
															"nativeSrc": "2960:25:9",
															"nodeType": "YulAssignment",
															"src": "2960:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2983:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2983:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2965:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2965:17:9"
																},
																"nativeSrc": "2965:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2965:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2960:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2960:1:9"
																}
															]
														},
														{
															"nativeSrc": "2994:25:9",
															"nodeType": "YulAssignment",
															"src": "2994:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3017:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3017:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2999:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2999:17:9"
																},
																"nativeSrc": "2999:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2999:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2994:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2994:1:9"
																}
															]
														},
														{
															"nativeSrc": "3028:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3028:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3051:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3051:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3054:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3054:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3047:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3047:3:9"
																},
																"nativeSrc": "3047:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3047:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3032:11:9",
																	"nodeType": "YulTypedName",
																	"src": "3032:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3065:41:9",
															"nodeType": "YulAssignment",
															"src": "3065:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3094:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "3094:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3076:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3076:17:9"
																},
																"nativeSrc": "3076:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3076:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3065:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3065:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3283:22:9",
																"nodeType": "YulBlock",
																"src": "3283:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3285:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3285:16:9"
																			},
																			"nativeSrc": "3285:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3285:18:9"
																		},
																		"nativeSrc": "3285:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3285:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3216:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "3216:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3209:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3209:6:9"
																				},
																				"nativeSrc": "3209:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3239:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "3239:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3246:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "3246:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3255:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "3255:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3242:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3242:3:9"
																						},
																						"nativeSrc": "3242:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3242:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3236:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3236:2:9"
																				},
																				"nativeSrc": "3236:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3236:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3189:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3189:2:9"
																		},
																		"nativeSrc": "3189:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3169:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:9"
																},
																"nativeSrc": "3169:113:9",
																"nodeType": "YulFunctionCall",
																"src": "3169:113:9"
															},
															"nativeSrc": "3166:139:9",
															"nodeType": "YulIf",
															"src": "3166:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2902:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2933:1:9",
														"nodeType": "YulTypedName",
														"src": "2933:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2936:1:9",
														"nodeType": "YulTypedName",
														"src": "2936:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2942:7:9",
														"nodeType": "YulTypedName",
														"src": "2942:7:9",
														"type": ""
													}
												],
												"src": "2902:410:9"
											},
											{
												"body": {
													"nativeSrc": "3414:73:9",
													"nodeType": "YulBlock",
													"src": "3414:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3431:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3436:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3436:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3424:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:9"
																},
																"nativeSrc": "3424:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3424:19:9"
															},
															"nativeSrc": "3424:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "3424:19:9"
														},
														{
															"nativeSrc": "3452:29:9",
															"nodeType": "YulAssignment",
															"src": "3452:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3471:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3476:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:9"
																},
																"nativeSrc": "3467:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3467:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3452:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "3452:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3318:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3386:3:9",
														"nodeType": "YulTypedName",
														"src": "3386:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3391:6:9",
														"nodeType": "YulTypedName",
														"src": "3391:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3402:11:9",
														"nodeType": "YulTypedName",
														"src": "3402:11:9",
														"type": ""
													}
												],
												"src": "3318:169:9"
											},
											{
												"body": {
													"nativeSrc": "3599:62:9",
													"nodeType": "YulBlock",
													"src": "3599:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3621:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3629:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3629:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:9"
																		},
																		"nativeSrc": "3617:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:14:9"
																	},
																	{
																		"hexValue": "6e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "3633:20:9",
																		"nodeType": "YulLiteral",
																		"src": "3633:20:9",
																		"type": "",
																		"value": "not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3610:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:9"
																},
																"nativeSrc": "3610:44:9",
																"nodeType": "YulFunctionCall",
																"src": "3610:44:9"
															},
															"nativeSrc": "3610:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "3610:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
												"nativeSrc": "3493:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3591:6:9",
														"nodeType": "YulTypedName",
														"src": "3591:6:9",
														"type": ""
													}
												],
												"src": "3493:168:9"
											},
											{
												"body": {
													"nativeSrc": "3813:220:9",
													"nodeType": "YulBlock",
													"src": "3813:220:9",
													"statements": [
														{
															"nativeSrc": "3823:74:9",
															"nodeType": "YulAssignment",
															"src": "3823:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3889:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3889:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3894:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3894:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3830:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3830:58:9"
																},
																"nativeSrc": "3830:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3830:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3823:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3995:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3995:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
																	"nativeSrc": "3906:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3906:88:9"
																},
																"nativeSrc": "3906:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3906:93:9"
															},
															"nativeSrc": "3906:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3906:93:9"
														},
														{
															"nativeSrc": "4008:19:9",
															"nodeType": "YulAssignment",
															"src": "4008:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4019:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4019:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4015:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:9"
																},
																"nativeSrc": "4015:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4015:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4008:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4008:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3667:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3801:3:9",
														"nodeType": "YulTypedName",
														"src": "3801:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3809:3:9",
														"nodeType": "YulTypedName",
														"src": "3809:3:9",
														"type": ""
													}
												],
												"src": "3667:366:9"
											},
											{
												"body": {
													"nativeSrc": "4210:248:9",
													"nodeType": "YulBlock",
													"src": "4210:248:9",
													"statements": [
														{
															"nativeSrc": "4220:26:9",
															"nodeType": "YulAssignment",
															"src": "4220:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4232:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4232:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4243:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4243:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4228:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:9"
																},
																"nativeSrc": "4228:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4228:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4220:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4220:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4267:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4267:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4278:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4278:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4263:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:9"
																		},
																		"nativeSrc": "4263:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4263:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4286:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4286:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4292:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4282:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:9"
																		},
																		"nativeSrc": "4282:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:9"
																},
																"nativeSrc": "4256:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4256:47:9"
															},
															"nativeSrc": "4256:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4256:47:9"
														},
														{
															"nativeSrc": "4312:139:9",
															"nodeType": "YulAssignment",
															"src": "4312:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4446:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4446:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4320:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4320:124:9"
																},
																"nativeSrc": "4320:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4320:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4312:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4312:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4039:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4190:9:9",
														"nodeType": "YulTypedName",
														"src": "4190:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4205:4:9",
														"nodeType": "YulTypedName",
														"src": "4205:4:9",
														"type": ""
													}
												],
												"src": "4039:419:9"
											},
											{
												"body": {
													"nativeSrc": "4509:149:9",
													"nodeType": "YulBlock",
													"src": "4509:149:9",
													"statements": [
														{
															"nativeSrc": "4519:25:9",
															"nodeType": "YulAssignment",
															"src": "4519:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4542:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4542:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4524:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4524:17:9"
																},
																"nativeSrc": "4524:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4524:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4519:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4519:1:9"
																}
															]
														},
														{
															"nativeSrc": "4553:25:9",
															"nodeType": "YulAssignment",
															"src": "4553:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4576:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4576:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4558:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4558:17:9"
																},
																"nativeSrc": "4558:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4558:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4553:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4553:1:9"
																}
															]
														},
														{
															"nativeSrc": "4587:17:9",
															"nodeType": "YulAssignment",
															"src": "4587:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4599:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4599:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4602:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4602:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4595:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4595:3:9"
																},
																"nativeSrc": "4595:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4595:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4587:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4587:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4629:22:9",
																"nodeType": "YulBlock",
																"src": "4629:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4631:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4631:16:9"
																			},
																			"nativeSrc": "4631:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4631:18:9"
																		},
																		"nativeSrc": "4631:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4631:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4620:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4620:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4626:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4626:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4617:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4617:2:9"
																},
																"nativeSrc": "4617:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4617:11:9"
															},
															"nativeSrc": "4614:37:9",
															"nodeType": "YulIf",
															"src": "4614:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4464:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4495:1:9",
														"nodeType": "YulTypedName",
														"src": "4495:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4498:1:9",
														"nodeType": "YulTypedName",
														"src": "4498:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4504:4:9",
														"nodeType": "YulTypedName",
														"src": "4504:4:9",
														"type": ""
													}
												],
												"src": "4464:194:9"
											},
											{
												"body": {
													"nativeSrc": "4708:147:9",
													"nodeType": "YulBlock",
													"src": "4708:147:9",
													"statements": [
														{
															"nativeSrc": "4718:25:9",
															"nodeType": "YulAssignment",
															"src": "4718:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4741:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4741:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4723:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4723:17:9"
																},
																"nativeSrc": "4723:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4723:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4718:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4718:1:9"
																}
															]
														},
														{
															"nativeSrc": "4752:25:9",
															"nodeType": "YulAssignment",
															"src": "4752:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4775:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4775:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4757:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4757:17:9"
																},
																"nativeSrc": "4757:20:9",
																"nodeType": "YulFunctionCall",
																"src": "4757:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4752:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "4752:1:9"
																}
															]
														},
														{
															"nativeSrc": "4786:16:9",
															"nodeType": "YulAssignment",
															"src": "4786:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4797:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4797:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4800:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4800:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4793:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:9"
																},
																"nativeSrc": "4793:9:9",
																"nodeType": "YulFunctionCall",
																"src": "4793:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4786:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4826:22:9",
																"nodeType": "YulBlock",
																"src": "4826:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4828:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4828:16:9"
																			},
																			"nativeSrc": "4828:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4828:18:9"
																		},
																		"nativeSrc": "4828:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4818:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "4818:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4821:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4815:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4815:2:9"
																},
																"nativeSrc": "4815:10:9",
																"nodeType": "YulFunctionCall",
																"src": "4815:10:9"
															},
															"nativeSrc": "4812:36:9",
															"nodeType": "YulIf",
															"src": "4812:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4664:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4695:1:9",
														"nodeType": "YulTypedName",
														"src": "4695:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4698:1:9",
														"nodeType": "YulTypedName",
														"src": "4698:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4704:3:9",
														"nodeType": "YulTypedName",
														"src": "4704:3:9",
														"type": ""
													}
												],
												"src": "4664:191:9"
											},
											{
												"body": {
													"nativeSrc": "5015:288:9",
													"nodeType": "YulBlock",
													"src": "5015:288:9",
													"statements": [
														{
															"nativeSrc": "5025:26:9",
															"nodeType": "YulAssignment",
															"src": "5025:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5037:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5048:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5033:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5033:3:9"
																},
																"nativeSrc": "5033:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5033:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5025:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5025:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5105:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5105:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5118:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5118:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5129:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5129:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5114:3:9"
																		},
																		"nativeSrc": "5114:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5061:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5061:43:9"
																},
																"nativeSrc": "5061:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5061:71:9"
															},
															"nativeSrc": "5061:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5061:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5186:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5186:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5199:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5210:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5210:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5195:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5195:3:9"
																		},
																		"nativeSrc": "5195:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5195:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5142:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5142:43:9"
																},
																"nativeSrc": "5142:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5142:72:9"
															},
															"nativeSrc": "5142:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5142:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5268:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:9"
																		},
																		"nativeSrc": "5277:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5224:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5224:43:9"
																},
																"nativeSrc": "5224:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5224:72:9"
															},
															"nativeSrc": "5224:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5224:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4861:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4971:9:9",
														"nodeType": "YulTypedName",
														"src": "4971:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:9",
														"nodeType": "YulTypedName",
														"src": "4983:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4991:6:9",
														"nodeType": "YulTypedName",
														"src": "4991:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4999:6:9",
														"nodeType": "YulTypedName",
														"src": "4999:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5010:4:9",
														"nodeType": "YulTypedName",
														"src": "5010:4:9",
														"type": ""
													}
												],
												"src": "4861:442:9"
											},
											{
												"body": {
													"nativeSrc": "5351:48:9",
													"nodeType": "YulBlock",
													"src": "5351:48:9",
													"statements": [
														{
															"nativeSrc": "5361:32:9",
															"nodeType": "YulAssignment",
															"src": "5361:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5386:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5386:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5379:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5379:6:9"
																		},
																		"nativeSrc": "5379:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5379:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5372:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:9"
																},
																"nativeSrc": "5372:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5372:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5361:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5361:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5309:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5333:5:9",
														"nodeType": "YulTypedName",
														"src": "5333:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5343:7:9",
														"nodeType": "YulTypedName",
														"src": "5343:7:9",
														"type": ""
													}
												],
												"src": "5309:90:9"
											},
											{
												"body": {
													"nativeSrc": "5445:76:9",
													"nodeType": "YulBlock",
													"src": "5445:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5499:16:9",
																"nodeType": "YulBlock",
																"src": "5499:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5508:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5508:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5511:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5511:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5501:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:9"
																			},
																			"nativeSrc": "5501:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5501:12:9"
																		},
																		"nativeSrc": "5501:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5501:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5468:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5468:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5490:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5490:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5475:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "5475:14:9"
																				},
																				"nativeSrc": "5475:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5475:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5465:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5465:2:9"
																		},
																		"nativeSrc": "5465:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5465:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5458:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:9"
																},
																"nativeSrc": "5458:40:9",
																"nodeType": "YulFunctionCall",
																"src": "5458:40:9"
															},
															"nativeSrc": "5455:60:9",
															"nodeType": "YulIf",
															"src": "5455:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5405:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5438:5:9",
														"nodeType": "YulTypedName",
														"src": "5438:5:9",
														"type": ""
													}
												],
												"src": "5405:116:9"
											},
											{
												"body": {
													"nativeSrc": "5587:77:9",
													"nodeType": "YulBlock",
													"src": "5587:77:9",
													"statements": [
														{
															"nativeSrc": "5597:22:9",
															"nodeType": "YulAssignment",
															"src": "5597:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5612:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5612:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5606:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5606:5:9"
																},
																"nativeSrc": "5606:13:9",
																"nodeType": "YulFunctionCall",
																"src": "5606:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5597:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5597:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5652:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5652:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5628:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "5628:23:9"
																},
																"nativeSrc": "5628:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5628:30:9"
															},
															"nativeSrc": "5628:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5628:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5527:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5565:6:9",
														"nodeType": "YulTypedName",
														"src": "5565:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5573:3:9",
														"nodeType": "YulTypedName",
														"src": "5573:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5581:5:9",
														"nodeType": "YulTypedName",
														"src": "5581:5:9",
														"type": ""
													}
												],
												"src": "5527:137:9"
											},
											{
												"body": {
													"nativeSrc": "5744:271:9",
													"nodeType": "YulBlock",
													"src": "5744:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5790:83:9",
																"nodeType": "YulBlock",
																"src": "5790:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5792:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5792:77:9"
																			},
																			"nativeSrc": "5792:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5792:79:9"
																		},
																		"nativeSrc": "5792:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5792:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5765:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5765:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5774:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5774:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5761:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5761:3:9"
																		},
																		"nativeSrc": "5761:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5761:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5786:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5786:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5757:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5757:3:9"
																},
																"nativeSrc": "5757:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5757:32:9"
															},
															"nativeSrc": "5754:119:9",
															"nodeType": "YulIf",
															"src": "5754:119:9"
														},
														{
															"nativeSrc": "5883:125:9",
															"nodeType": "YulBlock",
															"src": "5883:125:9",
															"statements": [
																{
																	"nativeSrc": "5898:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5898:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5912:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5912:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5902:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5902:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5927:71:9",
																	"nodeType": "YulAssignment",
																	"src": "5927:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5970:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5970:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5981:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5981:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5966:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5966:3:9"
																				},
																				"nativeSrc": "5966:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5966:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5990:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5990:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5937:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "5937:28:9"
																		},
																		"nativeSrc": "5937:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5927:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5927:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5670:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5714:9:9",
														"nodeType": "YulTypedName",
														"src": "5714:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5725:7:9",
														"nodeType": "YulTypedName",
														"src": "5725:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5737:6:9",
														"nodeType": "YulTypedName",
														"src": "5737:6:9",
														"type": ""
													}
												],
												"src": "5670:345:9"
											},
											{
												"body": {
													"nativeSrc": "6127:58:9",
													"nodeType": "YulBlock",
													"src": "6127:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6149:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6157:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6145:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:9"
																		},
																		"nativeSrc": "6145:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:14:9"
																	},
																	{
																		"hexValue": "7472616e73666572206572726f72",
																		"kind": "string",
																		"nativeSrc": "6161:16:9",
																		"nodeType": "YulLiteral",
																		"src": "6161:16:9",
																		"type": "",
																		"value": "transfer error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6138:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:9"
																},
																"nativeSrc": "6138:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6138:40:9"
															},
															"nativeSrc": "6138:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "6138:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96",
												"nativeSrc": "6021:164:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6119:6:9",
														"nodeType": "YulTypedName",
														"src": "6119:6:9",
														"type": ""
													}
												],
												"src": "6021:164:9"
											},
											{
												"body": {
													"nativeSrc": "6337:220:9",
													"nodeType": "YulBlock",
													"src": "6337:220:9",
													"statements": [
														{
															"nativeSrc": "6347:74:9",
															"nodeType": "YulAssignment",
															"src": "6347:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6413:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6418:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6418:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6354:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6354:58:9"
																},
																"nativeSrc": "6354:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6354:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6347:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6347:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6519:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6519:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96",
																	"nativeSrc": "6430:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6430:88:9"
																},
																"nativeSrc": "6430:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6430:93:9"
															},
															"nativeSrc": "6430:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6430:93:9"
														},
														{
															"nativeSrc": "6532:19:9",
															"nodeType": "YulAssignment",
															"src": "6532:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6548:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6539:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:9"
																},
																"nativeSrc": "6539:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6539:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6191:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6325:3:9",
														"nodeType": "YulTypedName",
														"src": "6325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6333:3:9",
														"nodeType": "YulTypedName",
														"src": "6333:3:9",
														"type": ""
													}
												],
												"src": "6191:366:9"
											},
											{
												"body": {
													"nativeSrc": "6734:248:9",
													"nodeType": "YulBlock",
													"src": "6734:248:9",
													"statements": [
														{
															"nativeSrc": "6744:26:9",
															"nodeType": "YulAssignment",
															"src": "6744:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6756:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6756:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6767:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6767:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6752:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:9"
																},
																"nativeSrc": "6752:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6752:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6744:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6744:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6802:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:9"
																		},
																		"nativeSrc": "6787:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6810:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6810:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6816:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6816:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6806:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6806:3:9"
																		},
																		"nativeSrc": "6806:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6806:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6780:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:9"
																},
																"nativeSrc": "6780:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6780:47:9"
															},
															"nativeSrc": "6780:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6780:47:9"
														},
														{
															"nativeSrc": "6836:139:9",
															"nodeType": "YulAssignment",
															"src": "6836:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6970:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6970:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6844:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6844:124:9"
																},
																"nativeSrc": "6844:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6844:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6836:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6836:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6563:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6714:9:9",
														"nodeType": "YulTypedName",
														"src": "6714:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6729:4:9",
														"nodeType": "YulTypedName",
														"src": "6729:4:9",
														"type": ""
													}
												],
												"src": "6563:419:9"
											},
											{
												"body": {
													"nativeSrc": "7016:152:9",
													"nodeType": "YulBlock",
													"src": "7016:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7033:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7033:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7036:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7036:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7026:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:9"
																},
																"nativeSrc": "7026:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7026:88:9"
															},
															"nativeSrc": "7026:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7026:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7130:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7130:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7133:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7133:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7123:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7123:6:9"
																},
																"nativeSrc": "7123:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7123:15:9"
															},
															"nativeSrc": "7123:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7123:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7154:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7154:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7157:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7157:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7147:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7147:6:9"
																},
																"nativeSrc": "7147:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7147:15:9"
															},
															"nativeSrc": "7147:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7147:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6988:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6988:180:9"
											},
											{
												"body": {
													"nativeSrc": "7216:143:9",
													"nodeType": "YulBlock",
													"src": "7216:143:9",
													"statements": [
														{
															"nativeSrc": "7226:25:9",
															"nodeType": "YulAssignment",
															"src": "7226:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7249:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7231:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7231:17:9"
																},
																"nativeSrc": "7231:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7231:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7226:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7226:1:9"
																}
															]
														},
														{
															"nativeSrc": "7260:25:9",
															"nodeType": "YulAssignment",
															"src": "7260:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7283:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7283:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7265:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7265:17:9"
																},
																"nativeSrc": "7265:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7265:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7260:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7260:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7307:22:9",
																"nodeType": "YulBlock",
																"src": "7307:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7309:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7309:16:9"
																			},
																			"nativeSrc": "7309:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7309:18:9"
																		},
																		"nativeSrc": "7309:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7309:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7304:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7304:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7297:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:9"
																},
																"nativeSrc": "7297:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7297:9:9"
															},
															"nativeSrc": "7294:35:9",
															"nodeType": "YulIf",
															"src": "7294:35:9"
														},
														{
															"nativeSrc": "7339:14:9",
															"nodeType": "YulAssignment",
															"src": "7339:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7348:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7348:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7351:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7344:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7344:3:9"
																},
																"nativeSrc": "7344:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7344:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7339:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7339:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7174:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7205:1:9",
														"nodeType": "YulTypedName",
														"src": "7205:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7208:1:9",
														"nodeType": "YulTypedName",
														"src": "7208:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7214:1:9",
														"nodeType": "YulTypedName",
														"src": "7214:1:9",
														"type": ""
													}
												],
												"src": "7174:185:9"
											},
											{
												"body": {
													"nativeSrc": "7491:206:9",
													"nodeType": "YulBlock",
													"src": "7491:206:9",
													"statements": [
														{
															"nativeSrc": "7501:26:9",
															"nodeType": "YulAssignment",
															"src": "7501:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7513:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7513:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7524:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7509:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7509:3:9"
																},
																"nativeSrc": "7509:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7509:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7501:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7501:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7581:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7594:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7594:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7605:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7605:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7590:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7590:3:9"
																		},
																		"nativeSrc": "7590:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7590:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7537:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7537:43:9"
																},
																"nativeSrc": "7537:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7537:71:9"
															},
															"nativeSrc": "7537:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7537:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7662:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7662:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7675:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7686:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7686:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7671:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:9"
																		},
																		"nativeSrc": "7671:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7671:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7618:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7618:43:9"
																},
																"nativeSrc": "7618:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7618:72:9"
															},
															"nativeSrc": "7618:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7618:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7365:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7455:9:9",
														"nodeType": "YulTypedName",
														"src": "7455:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7467:6:9",
														"nodeType": "YulTypedName",
														"src": "7467:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7475:6:9",
														"nodeType": "YulTypedName",
														"src": "7475:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7486:4:9",
														"nodeType": "YulTypedName",
														"src": "7486:4:9",
														"type": ""
													}
												],
												"src": "7365:332:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a(memPtr) {\n\n        mstore(add(memPtr, 0), \"not enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer error\")\n\n    }\n\n    function abi_encode_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"881": [
									{
										"length": 32,
										"start": 414
									},
									{
										"length": 32,
										"start": 720
									},
									{
										"length": 32,
										"start": 952
									},
									{
										"length": 32,
										"start": 1343
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632e1a7d4d146100595780636034114a14610075578063b6b55f2514610091578063c9116b69146100ad578063fc0c546a146100cb575b5f80fd5b610073600480360381019061006e91906106b2565b6100e9565b005b61008f600480360381019061008a9190610737565b61021b565b005b6100ab60048036038101906100a691906106b2565b6103a0565b005b6100b56104e7565b6040516100c29190610784565b60405180910390f35b6100d361053d565b6040516100e091906107ac565b60405180910390f35b80670de0b6b3a7640000816100fe91906107f2565b90505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821115610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061088d565b60405180910390fd5b670de0b6b3a76400008361019791906107f2565b92506101c47f00000000000000000000000000000000000000000000000000000000000000003385610561565b825f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020f91906108ab565b92505081905550505050565b80670de0b6b3a76400008161023091906107f2565b90505f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050808211156102b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ac9061088d565b60405180910390fd5b670de0b6b3a7640000836102c991906107f2565b92506102f67f00000000000000000000000000000000000000000000000000000000000000008585610561565b825f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034191906108de565b92505081905550825f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461039391906108ab565b9250508190555050505050565b670de0b6b3a7640000816103b491906107f2565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161041393929190610911565b6020604051808303815f875af115801561042f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610453919061097b565b610492576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610489906109f0565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104dd91906108de565b9250508190555050565b5f670de0b6b3a76400005f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105389190610a3b565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105db838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610594929190610a6b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105e0565b505050565b5f8060205f8451602086015f885af1806105ff576040513d5f823e3d81fd5b3d92505f519150505f8214610618576001811415610633565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561067557836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161066c91906107ac565b60405180910390fd5b50505050565b5f80fd5b5f819050919050565b6106918161067f565b811461069b575f80fd5b50565b5f813590506106ac81610688565b92915050565b5f602082840312156106c7576106c661067b565b5b5f6106d48482850161069e565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610706826106dd565b9050919050565b610716816106fc565b8114610720575f80fd5b50565b5f813590506107318161070d565b92915050565b5f806040838503121561074d5761074c61067b565b5b5f61075a85828601610723565b925050602061076b8582860161069e565b9150509250929050565b61077e8161067f565b82525050565b5f6020820190506107975f830184610775565b92915050565b6107a6816106fc565b82525050565b5f6020820190506107bf5f83018461079d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107fc8261067f565b91506108078361067f565b92508282026108158161067f565b9150828204841483151761082c5761082b6107c5565b5b5092915050565b5f82825260208201905092915050565b7f6e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f610877601283610833565b915061088282610843565b602082019050919050565b5f6020820190508181035f8301526108a48161086b565b9050919050565b5f6108b58261067f565b91506108c08361067f565b92508282039050818111156108d8576108d76107c5565b5b92915050565b5f6108e88261067f565b91506108f38361067f565b925082820190508082111561090b5761090a6107c5565b5b92915050565b5f6060820190506109245f83018661079d565b610931602083018561079d565b61093e6040830184610775565b949350505050565b5f8115159050919050565b61095a81610946565b8114610964575f80fd5b50565b5f8151905061097581610951565b92915050565b5f602082840312156109905761098f61067b565b5b5f61099d84828501610967565b91505092915050565b7f7472616e73666572206572726f720000000000000000000000000000000000005f82015250565b5f6109da600e83610833565b91506109e5826109a6565b602082019050919050565b5f6020820190508181035f830152610a07816109ce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610a458261067f565b9150610a508361067f565b925082610a6057610a5f610a0e565b5b828204905092915050565b5f604082019050610a7e5f83018561079d565b610a8b6020830184610775565b939250505056fea2646970667358221220a9acde5d32514636bd0978a673cfec0ad963beee0f92510b6594b9c525fb931764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6034114A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xC9116B69 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x21B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC2 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x1C4 PUSH32 0x0 CALLER DUP6 PUSH2 0x561 JUMP JUMPDEST DUP3 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP1 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH2 0x2F6 PUSH32 0x0 DUP6 DUP6 PUSH2 0x561 JUMP JUMPDEST DUP3 PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x97B JUMP JUMPDEST PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x5DB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x594 SWAP3 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x5E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x618 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x633 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x675 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x691 DUP2 PUSH2 0x67F JUMP JUMPDEST DUP2 EQ PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AC DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x706 DUP3 PUSH2 0x6DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x716 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP2 EQ PUSH2 0x720 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x731 DUP2 PUSH2 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x75A DUP6 DUP3 DUP7 ADD PUSH2 0x723 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x76B DUP6 DUP3 DUP7 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x77E DUP2 PUSH2 0x67F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x797 PUSH0 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A6 DUP2 PUSH2 0x6FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7BF PUSH0 DUP4 ADD DUP5 PUSH2 0x79D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7FC DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x807 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x815 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x877 PUSH1 0x12 DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x882 DUP3 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8A4 DUP2 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8B5 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E8 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0x8F3 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x7C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x924 PUSH0 DUP4 ADD DUP7 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x931 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x93E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95A DUP2 PUSH2 0x946 JUMP JUMPDEST DUP2 EQ PUSH2 0x964 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x975 DUP2 PUSH2 0x951 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x67B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x967 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7472616E73666572206572726F72000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9DA PUSH1 0xE DUP4 PUSH2 0x833 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E5 DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA07 DUP2 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA45 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP2 POP PUSH2 0xA50 DUP4 PUSH2 0x67F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA60 JUMPI PUSH2 0xA5F PUSH2 0xA0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA7E PUSH0 DUP4 ADD DUP6 PUSH2 0x79D JUMP JUMPDEST PUSH2 0xA8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x775 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xAC 0xDE TSTORE ORIGIN MLOAD CHAINID CALLDATASIZE 0xBD MULMOD PUSH25 0xA673CFEC0AD963BEEE0F92510B6594B9C525FB931764736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "181:1181:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1108:252;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;464:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;344:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:213;944:6;753:8;744:6;:17;;;;:::i;:::-;735:26;;771:12;786:9;:21;796:10;786:21;;;;;;;;;;;;;;;;771:36;;835:7;825:6;:17;;817:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;979:8:::1;970:6;:17;;;;:::i;:::-;961:26;;997:57;1027:5;1035:10;1047:6;997:22;:57::i;:::-;1089:6;1064:9;:21:::0;1074:10:::1;1064:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;725:158:::0;889:213;;:::o;1108:252::-;1177:6;753:8;744:6;:17;;;;:::i;:::-;735:26;;771:12;786:9;:21;796:10;786:21;;;;;;;;;;;;;;;;771:36;;835:7;825:6;:17;;817:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1212:8:::1;1203:6;:17;;;;:::i;:::-;1194:26;;1230:49;1260:5;1268:2;1272:6;1230:22;:49::i;:::-;1306:6;1289:9;:13:::0;1299:2:::1;1289:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1347:6;1322:9;:21:::0;1332:10:::1;1322:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;725:158:::0;1108:252;;;:::o;464:219::-;529:8;520:6;:17;;;;:::i;:::-;511:26;;562:5;555:26;;;582:10;602:4;609:6;555:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;547:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;670:6;645:9;:21;655:10;645:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;464:219;:::o;344:113::-;386:12;443:6;420:9;:21;430:10;420:21;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;410:40;;344:113;:::o;242:30::-;;;:::o;1271:160:4:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:474::-;1600:6;1608;1657:2;1645:9;1636:7;1632:23;1628:32;1625:119;;;1663:79;;:::i;:::-;1625:119;1783:1;1808:53;1853:7;1844:6;1833:9;1829:22;1808:53;:::i;:::-;1798:63;;1754:117;1910:2;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1881:118;1532:474;;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:180::-;2764:77;2761:1;2754:88;2861:4;2858:1;2851:15;2885:4;2882:1;2875:15;2902:410;2942:7;2965:20;2983:1;2965:20;:::i;:::-;2960:25;;2999:20;3017:1;2999:20;:::i;:::-;2994:25;;3054:1;3051;3047:9;3076:30;3094:11;3076:30;:::i;:::-;3065:41;;3255:1;3246:7;3242:15;3239:1;3236:22;3216:1;3209:9;3189:83;3166:139;;3285:18;;:::i;:::-;3166:139;2950:362;2902:410;;;;:::o;3318:169::-;3402:11;3436:6;3431:3;3424:19;3476:4;3471:3;3467:14;3452:29;;3318:169;;;;:::o;3493:168::-;3633:20;3629:1;3621:6;3617:14;3610:44;3493:168;:::o;3667:366::-;3809:3;3830:67;3894:2;3889:3;3830:67;:::i;:::-;3823:74;;3906:93;3995:3;3906:93;:::i;:::-;4024:2;4019:3;4015:12;4008:19;;3667:366;;;:::o;4039:419::-;4205:4;4243:2;4232:9;4228:18;4220:26;;4292:9;4286:4;4282:20;4278:1;4267:9;4263:17;4256:47;4320:131;4446:4;4320:131;:::i;:::-;4312:139;;4039:419;;;:::o;4464:194::-;4504:4;4524:20;4542:1;4524:20;:::i;:::-;4519:25;;4558:20;4576:1;4558:20;:::i;:::-;4553:25;;4602:1;4599;4595:9;4587:17;;4626:1;4620:4;4617:11;4614:37;;;4631:18;;:::i;:::-;4614:37;4464:194;;;;:::o;4664:191::-;4704:3;4723:20;4741:1;4723:20;:::i;:::-;4718:25;;4757:20;4775:1;4757:20;:::i;:::-;4752:25;;4800:1;4797;4793:9;4786:16;;4821:3;4818:1;4815:10;4812:36;;;4828:18;;:::i;:::-;4812:36;4664:191;;;;:::o;4861:442::-;5010:4;5048:2;5037:9;5033:18;5025:26;;5061:71;5129:1;5118:9;5114:17;5105:6;5061:71;:::i;:::-;5142:72;5210:2;5199:9;5195:18;5186:6;5142:72;:::i;:::-;5224;5292:2;5281:9;5277:18;5268:6;5224:72;:::i;:::-;4861:442;;;;;;:::o;5309:90::-;5343:7;5386:5;5379:13;5372:21;5361:32;;5309:90;;;:::o;5405:116::-;5475:21;5490:5;5475:21;:::i;:::-;5468:5;5465:32;5455:60;;5511:1;5508;5501:12;5455:60;5405:116;:::o;5527:137::-;5581:5;5612:6;5606:13;5597:22;;5628:30;5652:5;5628:30;:::i;:::-;5527:137;;;;:::o;5670:345::-;5737:6;5786:2;5774:9;5765:7;5761:23;5757:32;5754:119;;;5792:79;;:::i;:::-;5754:119;5912:1;5937:61;5990:7;5981:6;5970:9;5966:22;5937:61;:::i;:::-;5927:71;;5883:125;5670:345;;;;:::o;6021:164::-;6161:16;6157:1;6149:6;6145:14;6138:40;6021:164;:::o;6191:366::-;6333:3;6354:67;6418:2;6413:3;6354:67;:::i;:::-;6347:74;;6430:93;6519:3;6430:93;:::i;:::-;6548:2;6543:3;6539:12;6532:19;;6191:366;;;:::o;6563:419::-;6729:4;6767:2;6756:9;6752:18;6744:26;;6816:9;6810:4;6806:20;6802:1;6791:9;6787:17;6780:47;6844:131;6970:4;6844:131;:::i;:::-;6836:139;;6563:419;;;:::o;6988:180::-;7036:77;7033:1;7026:88;7133:4;7130:1;7123:15;7157:4;7154:1;7147:15;7174:185;7214:1;7231:20;7249:1;7231:20;:::i;:::-;7226:25;;7265:20;7283:1;7265:20;:::i;:::-;7260:25;;7304:1;7294:35;;7309:18;;:::i;:::-;7294:35;7351:1;7348;7344:9;7339:14;;7174:185;;;;:::o;7365:332::-;7486:4;7524:2;7513:9;7509:18;7501:26;;7537:71;7605:1;7594:9;7590:17;7581:6;7537:71;:::i;:::-;7618:72;7686:2;7675:9;7671:18;7662:6;7618:72;:::i;:::-;7365:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "552000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bankTransfer(address,uint256)": "infinite",
								"deposit(uint256)": "infinite",
								"myBalance()": "infinite",
								"token()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 279,
									"end": 338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 279,
									"end": 338,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 325,
									"end": 331,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 317,
									"end": 331,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 317,
									"end": 331,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 317,
									"end": 331,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 317,
									"end": 331,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 279,
									"end": 338,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "881"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1362,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9acde5d32514636bd0978a673cfec0ad963beee0f92510b6594b9c525fb931764736f6c634300081a0033",
									".code": [
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "6034114A"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "B6B55F25"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "C9116B69"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 1362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 889,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 889,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1108,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1108,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 344,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 242,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 242,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 753,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 744,
											"end": 750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 744,
											"end": 761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 744,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 744,
											"end": 761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 771,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 771,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 771,
											"end": 807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 825,
											"end": 842,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 825,
											"end": 842,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 817,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 970,
											"end": 976,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 970,
											"end": 987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 970,
											"end": 987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 987,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 961,
											"end": 987,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1027,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "881"
										},
										{
											"begin": 1035,
											"end": 1045,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1047,
											"end": 1053,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 997,
											"end": 1054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 997,
											"end": 1054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 997,
											"end": 1054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1084,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1064,
											"end": 1095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1064,
											"end": 1095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 889,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 753,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 744,
											"end": 750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 744,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 744,
											"end": 761,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 735,
											"end": 761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 771,
											"end": 783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 807,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 771,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 771,
											"end": 807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 835,
											"end": 842,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 825,
											"end": 831,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 825,
											"end": 842,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 825,
											"end": 842,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 817,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 865,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 817,
											"end": 865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1203,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1203,
											"end": 1220,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1203,
											"end": 1220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1220,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1220,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1260,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "881"
										},
										{
											"begin": 1268,
											"end": 1270,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1278,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1230,
											"end": 1279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1230,
											"end": 1279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1299,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1289,
											"end": 1312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1312,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1342,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 1322,
											"end": 1353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 529,
											"end": 537,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 520,
											"end": 526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 520,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 520,
											"end": 537,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 520,
											"end": 537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 520,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 520,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 520,
											"end": 537,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 520,
											"end": 537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 511,
											"end": 537,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 511,
											"end": 537,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "881"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 581,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 581,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 582,
											"end": 592,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 602,
											"end": 606,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 555,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 555,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 555,
											"end": 616,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 555,
											"end": 616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 547,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 547,
											"end": 635,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 547,
											"end": 635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 655,
											"end": 665,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 666,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 645,
											"end": 666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 645,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 645,
											"end": 676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 645,
											"end": 676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 464,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 420,
											"end": 429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 430,
											"end": 440,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 441,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 420,
											"end": 441,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 420,
											"end": 450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 420,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 420,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 420,
											"end": 450,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 420,
											"end": 450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 410,
											"end": 450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 410,
											"end": 450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "881"
										},
										{
											"begin": 242,
											"end": 272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 242,
											"end": 272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1663,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1853,
											"end": 1860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1851,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1808,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1532,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2896,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2716,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2841,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 2949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2960,
											"end": 2985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2999,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3019,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2999,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3076,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3076,
											"end": 3106,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3076,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3257,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3258,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3189,
											"end": 3272,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3166,
											"end": 3305,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 3285,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3305,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3166,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3661,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3493,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "PUSH",
											"source": 9,
											"value": "6E6F7420656E6F7567682062616C616E63650000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 4033,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 3667,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3809,
											"end": 3812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3894,
											"end": 3896,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3889,
											"end": 3892,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3830,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3830,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 3897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 3897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3906,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 3999,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3906,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 4033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 4033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 4033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 4033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4458,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4039,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4205,
											"end": 4209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4245,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4286,
											"end": 4290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4302,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4256,
											"end": 4303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4446,
											"end": 4450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4320,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4451,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 4320,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4458,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4504,
											"end": 4508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4524,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4524,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4558,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4617,
											"end": 4628,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4651,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4614,
											"end": 4651,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4631,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4651,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4614,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4723,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4718,
											"end": 4743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4757,
											"end": 4777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4757,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4777,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4752,
											"end": 4777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4801,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4825,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4828,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4812,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5010,
											"end": 5014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5037,
											"end": 5046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5111,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5132,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5061,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5210,
											"end": 5212,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5208,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5142,
											"end": 5214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5214,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5142,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5224,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5224,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5224,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5224,
											"end": 5296,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5224,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5399,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5309,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 5393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5521,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5405,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5490,
											"end": 5495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5475,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5468,
											"end": 5473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5465,
											"end": 5497,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5455,
											"end": 5515,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5515,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5455,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5405,
											"end": 5521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5606,
											"end": 5619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5628,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5628,
											"end": 5658,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 5628,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5743,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5774,
											"end": 5783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5765,
											"end": 5772,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5784,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5757,
											"end": 5789,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5873,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5754,
											"end": 5873,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5792,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 5792,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 5792,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5792,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 5792,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5873,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5754,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 5990,
											"end": 5997,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5966,
											"end": 5988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5937,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5937,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5937,
											"end": 5998,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 5937,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 6008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 6015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6185,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6021,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6161,
											"end": 6177,
											"name": "PUSH",
											"source": 9,
											"value": "7472616E73666572206572726F72000000000000000000000000000000000000"
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6138,
											"end": 6178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6418,
											"end": 6420,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6354,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 6354,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6421,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6519,
											"end": 6522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 6430,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6430,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6752,
											"end": 6770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6844,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6844,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6836,
											"end": 6975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7168,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6988,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7113,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7114,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7133,
											"end": 7137,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7123,
											"end": 7138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7162,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7231,
											"end": 7251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7251,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7231,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 7265,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7285,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7294,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7294,
											"end": 7329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7309,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 7309,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7294,
											"end": 7329,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7294,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7344,
											"end": 7353,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7174,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7486,
											"end": 7490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7513,
											"end": 7522,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7527,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7605,
											"end": 7606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7537,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7608,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 7537,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 7618,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7618,
											"end": 7690,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 7618,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bankTransfer(address,uint256)": "6034114a",
							"deposit(uint256)": "b6b55f25",
							"myBalance()": "c9116b69",
							"token()": "fc0c546a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bankTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0x9ec85c53f443521204fa58c3ed28d5dde9c260ca3659b68d62b82f622b141615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc1795dc93495b0daa90ffacfb83238e49c045d1c6198e5b84c9098339af9ca5\",\"dweb:/ipfs/QmWtbF1VjV8x8pJpVfVKkXHWqzT7dCL6PHoijegGSJX8JX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 879,
								"contract": "contracts/Bank.sol:Bank",
								"label": "deposited",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							871
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 871,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 871,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								871,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							871
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 872,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 871,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 838,
							"src": "238:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 174,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "246:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 181,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "875:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:4"
									},
									"src": "844:46:4"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 190,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1028:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1054:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:4"
									},
									"src": "972:109:4"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1343:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1373:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 205,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1395:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1395:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 207,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1412:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 208,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "1416:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 209,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 203,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 201,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1353:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:4"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1293:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1293:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1293:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1307:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1319:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:4"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:4"
									},
									"scope": 578,
									"src": "1271:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1760:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1790:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 231,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "1812:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1812:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 233,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1833:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 234,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1839:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1843:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 229,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 227,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1770:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:4"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1696:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1696:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1696:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1710:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1724:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1736:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:4"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:4"
									},
									"scope": 578,
									"src": "1670:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "2600:139:4",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 271,
														"src": "2610:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 258,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$578",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$578",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2664:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 254,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2633:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2633:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2695:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 265,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2702:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 266,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "2711:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 267,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "2726:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2682:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:4"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2545:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2545:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2545:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2559:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2576:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:4"
									},
									"scope": 578,
									"src": "2514:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3505:370:4",
										"statements": [
											{
												"id": 313,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:4",
												"statements": [
													{
														"assignments": [
															284
														],
														"declarations": [
															{
																"constant": false,
																"id": 284,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 313,
																"src": "3539:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 293,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 289,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$578",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$578",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 287,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 291,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "3597:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 285,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3566:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "3566:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "3623:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 295,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "3642:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 304,
														"nodeType": "IfStatement",
														"src": "3619:160:4",
														"trueBody": {
															"id": 303,
															"nodeType": "Block",
															"src": "3661:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 298,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3719:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 299,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 284,
																				"src": "3728:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 300,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 280,
																				"src": "3746:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 297,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3686:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 302,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 306,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3805:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 307,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "3812:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 308,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "3821:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 309,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "3840:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 305,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "3792:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 312,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3438:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 274,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3438:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3438:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3452:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3469:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:4"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:4"
									},
									"scope": 578,
									"src": "3407:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4529:303:4",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "4539:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 330,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4582:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "4582:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 332,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4598:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "4607:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 328,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:4"
											},
											{
												"condition": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 338,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4654:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 339,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4661:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 337,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "4630:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "4625:201:4",
												"trueBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "4676:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 343,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "4710:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 346,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 319,
																					"src": "4732:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "4732:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 348,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 321,
																						"src": "4748:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 349,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 350,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 344,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 342,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4690:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 353,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "4795:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 356,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "4802:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 354,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4775:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 358,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4474:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 318,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 317,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4474:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4474:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4488:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4505:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:4"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:4"
									},
									"scope": 578,
									"src": "4452:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "5279:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 375,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "5293:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5402:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "5406:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 391,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5413:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 387,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5380:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5380:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 402,
													"nodeType": "IfStatement",
													"src": "5375:117:4",
													"trueBody": {
														"id": 401,
														"nodeType": "Block",
														"src": "5420:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 397,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 366,
																					"src": "5474:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 395,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 394,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "5441:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 400,
																"nodeType": "RevertStatement",
																"src": "5434:47:4"
															}
														]
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "5289:203:4",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "5314:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 381,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5341:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 382,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "5348:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 383,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "5352:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 380,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "5328:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5208:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5208:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5208:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5224:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5236:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5251:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:4"
									},
									"scope": 578,
									"src": "5176:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "6017:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 420,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "6031:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6154:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6160:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6164:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 438,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6171:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6128:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6128:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 449,
													"nodeType": "IfStatement",
													"src": "6123:127:4",
													"trueBody": {
														"id": 448,
														"nodeType": "Block",
														"src": "6178:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 444,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6232:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 442,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 441,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "6199:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 447,
																"nodeType": "RevertStatement",
																"src": "6192:47:4"
															}
														]
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6027:223:4",
												"trueBody": {
													"id": 432,
													"nodeType": "Block",
													"src": "6052:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 426,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6083:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 427,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6090:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 428,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "6096:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 429,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "6100:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 425,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "6066:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5895:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 408,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 407,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5895:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5895:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5919:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5941:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "5984:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:4"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:4"
									},
									"scope": 578,
									"src": "5850:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "7023:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 465,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "7037:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "7145:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "7149:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 481,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "7156:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 477,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "7124:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7124:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 492,
													"nodeType": "IfStatement",
													"src": "7119:116:4",
													"trueBody": {
														"id": 491,
														"nodeType": "Block",
														"src": "7163:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 487,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 456,
																					"src": "7217:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 485,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 484,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "7184:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 490,
																"nodeType": "RevertStatement",
																"src": "7177:47:4"
															}
														]
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "7033:202:4",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "7058:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 471,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7085:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 472,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "7092:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "7096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 470,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "7072:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6952:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6952:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6952:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6968:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6980:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "6995:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:4"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:4"
									},
									"scope": 578,
									"src": "6921:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7808:650:4",
										"statements": [
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "7818:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:4"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "7846:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:4"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:4",
													"nodeType": "YulBlock",
													"src": "7900:396:4",
													"statements": [
														{
															"nativeSrc": "7914:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:4"
																		},
																		"nativeSrc": "7934:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:4",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:4"
																		},
																		"nativeSrc": "7951:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:4"
																		},
																		"nativeSrc": "7968:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:4"
																},
																"nativeSrc": "7929:60:4",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:4",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:4",
																"nodeType": "YulBlock",
																"src": "8050:157:4",
																"statements": [
																	{
																		"nativeSrc": "8068:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:4"
																			},
																			"nativeSrc": "8079:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:4"
																					},
																					"nativeSrc": "8130:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:4"
																			},
																			"nativeSrc": "8107:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:4"
																		},
																		"nativeSrc": "8107:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:4"
																					},
																					"nativeSrc": "8176:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:4"
																			},
																			"nativeSrc": "8164:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:4"
																		},
																		"nativeSrc": "8164:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:4"
																},
																"nativeSrc": "8034:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:4"
															},
															"nativeSrc": "8031:176:4",
															"nodeType": "YulIf",
															"src": "8031:176:4"
														},
														{
															"nativeSrc": "8220:30:4",
															"nodeType": "YulAssignment",
															"src": "8220:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:4"
																},
																"nativeSrc": "8234:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:4"
																}
															]
														},
														{
															"nativeSrc": "8263:23:4",
															"nodeType": "YulAssignment",
															"src": "8263:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:4"
																},
																"nativeSrc": "8278:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 501,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:4",
														"valueSize": 1
													},
													{
														"declaration": 501,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:4",
														"valueSize": 1
													},
													{
														"declaration": 505,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:4",
														"valueSize": 1
													},
													{
														"declaration": 508,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:4",
														"valueSize": 1
													},
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 510,
												"nodeType": "InlineAssembly",
												"src": "7875:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8310:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 522,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "8362:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 516,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "8336:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 514,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "8306:146:4",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "8380:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 529,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "8434:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 527,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 526,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "8401:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 532,
															"nodeType": "RevertStatement",
															"src": "8394:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 497,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "7767:6:4"
													},
													"referencedDeclaration": 167,
													"src": "7767:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7781:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:4"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:4"
									},
									"scope": 578,
									"src": "7738:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "9049:391:4",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9059:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9081:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:4"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "9109:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:4",
													"nodeType": "YulBlock",
													"src": "9163:174:4",
													"statements": [
														{
															"nativeSrc": "9177:71:4",
															"nodeType": "YulAssignment",
															"src": "9177:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:4"
																		},
																		"nativeSrc": "9193:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:4"
																		},
																		"nativeSrc": "9210:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:4"
																		},
																		"nativeSrc": "9227:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:4"
																},
																"nativeSrc": "9188:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:4"
																}
															]
														},
														{
															"nativeSrc": "9261:30:4",
															"nodeType": "YulAssignment",
															"src": "9261:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:4"
																},
																"nativeSrc": "9275:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:4"
																}
															]
														},
														{
															"nativeSrc": "9304:23:4",
															"nodeType": "YulAssignment",
															"src": "9304:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:4"
																},
																"nativeSrc": "9319:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 542,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:4",
														"valueSize": 1
													},
													{
														"declaration": 542,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:4",
														"valueSize": 1
													},
													{
														"declaration": 551,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:4",
														"valueSize": 1
													},
													{
														"declaration": 548,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:4",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 556,
												"nodeType": "InlineAssembly",
												"src": "9138:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "9353:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 558,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "9365:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 569,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "9416:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 563,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "9391:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 561,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 573,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 546,
												"id": 575,
												"nodeType": "Return",
												"src": "9346:87:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "8993:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 539,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 538,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8993:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8993:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "9007:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "9043:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:4"
									},
									"scope": 578,
									"src": "8960:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 579,
							"src": "750:8692:4",
							"usedErrors": [
								181,
								190
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"Errors": [
							859
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 838,
							"sourceUnit": 860,
							"src": "127:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 581,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 859,
										"src": "135:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "Address",
							"nameLocation": "241:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 588,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:5"
									},
									"src": "335:39:5"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1361:278:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 598,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																],
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 596,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 601,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1399:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 615,
												"nodeType": "IfStatement",
												"src": "1371:125:5",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "1407:89:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 608,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 611,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "1478:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 603,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1428:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "1428:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 613,
															"nodeType": "RevertStatement",
															"src": "1421:64:5"
														}
													]
												}
											},
											{
												"assignments": [
													617,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "1507:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 616,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 618,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1525:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 620,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1547:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:5"
											},
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:5",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "1573:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "1568:65:5",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "1582:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 627,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1603:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 850,
																	"src": "1603:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "1596:26:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1309:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:5"
									},
									"scope": 837,
									"src": "1290:349:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "2573:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2612:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "2620:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 645,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2590:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 644,
												"id": 650,
												"nodeType": "Return",
												"src": "2583:45:5"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2506:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2522:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:5"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:5"
									},
									"scope": 837,
									"src": "2484:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3072:294:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 666,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$837",
																		"typeString": "library Address"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 669,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3110:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "3082:123:5",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "3117:88:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 676,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$837",
																						"typeString": "library Address"
																					}
																				],
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 674,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:5",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 679,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "3188:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 671,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "3138:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:5",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "3138:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 681,
															"nodeType": "RevertStatement",
															"src": "3131:63:5"
														}
													]
												}
											},
											{
												"assignments": [
													685,
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "3215:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 684,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "3229:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 686,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"arguments": [
														{
															"id": 692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3282:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 688,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "3256:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 690,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "3275:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "3339:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 698,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3348:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 695,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3304:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 663,
												"id": 700,
												"nodeType": "Return",
												"src": "3297:62:5"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2990:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3006:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3025:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:5"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3058:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:5"
									},
									"scope": 837,
									"src": "2959:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "3605:154:5",
										"statements": [
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3616:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "3630:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3675:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 716,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3657:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3724:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "3732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 724,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3741:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 721,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3697:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 711,
												"id": 726,
												"nodeType": "Return",
												"src": "3690:62:5"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3533:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3549:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:5"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "3591:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:5"
									},
									"scope": 837,
									"src": "3505:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "3997:156:5",
										"statements": [
											{
												"assignments": [
													739,
													741
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4008:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 738,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4022:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 740,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4069:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 742,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4049:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4118:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4126:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 750,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "4135:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4091:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 737,
												"id": 752,
												"nodeType": "Return",
												"src": "4084:62:5"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3930:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3946:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:5"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "3983:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:5"
									},
									"scope": 837,
									"src": "3900:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "4579:424:5",
										"statements": [
											{
												"condition": {
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:5",
													"subExpression": {
														"id": 766,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "4594:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "4653:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 773,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 761,
																			"src": "4841:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 777,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "4867:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 788,
															"nodeType": "IfStatement",
															"src": "4837:119:5",
															"trueBody": {
																"id": 787,
																"nodeType": "Block",
																"src": "4892:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 784,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "4934:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 783,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "4917:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 786,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 789,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "4976:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 765,
															"id": 790,
															"nodeType": "Return",
															"src": "4969:17:5"
														}
													]
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "4589:408:5",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "4603:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 769,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "4625:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 768,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "4617:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4466:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4490:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4512:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4565:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:5"
									},
									"scope": 837,
									"src": "4421:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "5307:122:5",
										"statements": [
											{
												"condition": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:5",
													"subExpression": {
														"id": 804,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "5322:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "5381:42:5",
													"statements": [
														{
															"expression": {
																"id": 811,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "5402:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 803,
															"id": 812,
															"nodeType": "Return",
															"src": "5395:17:5"
														}
													]
												},
												"id": 814,
												"nodeType": "IfStatement",
												"src": "5317:106:5",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "5331:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5353:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 806,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "5345:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5231:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5245:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5293:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:5"
									},
									"scope": 837,
									"src": "5205:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "5598:432:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 822,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "5674:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "5973:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 828,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "5994:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$859_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:5",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 850,
																	"src": "5994:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "5987:26:5"
														}
													]
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "5670:354:5",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "5697:270:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:5",
																"nodeType": "YulBlock",
																"src": "5824:133:5",
																"statements": [
																	{
																		"nativeSrc": "5842:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:5"
																			},
																			"nativeSrc": "5865:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:5",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:5",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:5"
																					},
																					"nativeSrc": "5906:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:5"
																			},
																			"nativeSrc": "5899:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:5"
																		},
																		"nativeSrc": "5899:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:5"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 819,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 819,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:5",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 826,
															"nodeType": "InlineAssembly",
															"src": "5799:158:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "5560:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:5"
									},
									"scope": 837,
									"src": "5543:487:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 838,
							"src": "233:5799:5",
							"usedErrors": [
								588
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 840,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:6",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859
							],
							"name": "Errors",
							"nameLocation": "419:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:6",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 847,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "557:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "574:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:6"
									},
									"src": "531:59:6"
								},
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:6",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 850,
									"name": "FailedCall",
									"nameLocation": "696:10:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:6"
									},
									"src": "690:19:6"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:6",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 853,
									"name": "FailedDeployment",
									"nameLocation": "772:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"src": "766:25:6"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:6",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 858,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "884:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:6"
									},
									"src": "860:33:6"
								}
							],
							"scope": 860,
							"src": "411:484:6",
							"usedErrors": [
								847,
								850,
								853,
								858
							],
							"usedEvents": []
						}
					],
					"src": "100:796:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							871
						]
					},
					"id": 872,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 862,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 871,
							"linearizedBaseContracts": [
								871
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 864,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 871,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 872,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/Bank.sol": {
				"ast": {
					"absolutePath": "contracts/Bank.sol",
					"exportedSymbols": {
						"Address": [
							837
						],
						"Bank": [
							1052
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							578
						]
					},
					"id": 1053,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 873,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"id": 874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1053,
							"sourceUnit": 90,
							"src": "58:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 875,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1053,
							"sourceUnit": 579,
							"src": "114:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1052,
							"linearizedBaseContracts": [
								1052
							],
							"name": "Bank",
							"nameLocation": "190:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 879,
									"mutability": "mutable",
									"name": "deposited",
									"nameLocation": "226:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1052,
									"src": "200:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 878,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 876,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "209:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "200:25:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 877,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "220:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 881,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "267:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1052,
									"src": "242:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 880,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "307:31:8",
										"statements": [
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 886,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "317:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 887,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "325:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "317:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "317:14:8"
											}
										]
									},
									"id": 891,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "299:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "291:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:16:8"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:8"
									},
									"scope": 1052,
									"src": "279:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "400:57:8",
										"statements": [
											{
												"expression": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 896,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "410:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 897,
																"name": "deposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "420:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 900,
															"indexExpression": {
																"expression": {
																	"id": 898,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "430:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "434:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "430:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "420:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "443:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "447:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "443:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 904,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "442:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "420:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "410:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "410:40:8"
											}
										]
									},
									"functionSelector": "c9116b69",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myBalance",
									"nameLocation": "353:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:8"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "391:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "386:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:14:8"
									},
									"scope": 1052,
									"src": "344:113:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "501:182:8",
										"statements": [
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 914,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "511:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 915,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "520:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "529:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "535:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "529:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "520:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "511:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "511:26:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 927,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "582:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "586:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "582:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "602:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$1052",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$1052",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "594:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "594:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "594:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 933,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "609:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 924,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "562:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 923,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "555:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "555:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "569:12:8",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "555:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "555:61:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206572726f72",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "618:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96",
																"typeString": "literal_string \"transfer error\""
															},
															"value": "transfer error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baabc2325ab24f1ef53c2a1597aa8e1538532aa7bda6f7cfed05f626a2f1ab96",
																"typeString": "literal_string \"transfer error\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "547:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "547:88:8"
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 938,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "645:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 941,
														"indexExpression": {
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "655:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "659:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "655:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "645:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 942,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "670:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "645:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "645:31:8"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "473:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "486:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "481:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:13:8"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:0:8"
									},
									"scope": 1052,
									"src": "464:219:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "725:158:8",
										"statements": [
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "735:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 951,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "744:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "753:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "759:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "753:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "744:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "735:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "735:26:8"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "776:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "771:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "771:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"baseExpression": {
														"id": 960,
														"name": "deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "786:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 963,
													"indexExpression": {
														"expression": {
															"id": 961,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "796:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "800:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "796:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "786:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "771:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "825:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 967,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "835:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "825:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f7567682062616c616e6365",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
																"typeString": "literal_string \"not enough balance\""
															},
															"value": "not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
																"typeString": "literal_string \"not enough balance\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "817:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "817:48:8"
											},
											{
												"id": 972,
												"nodeType": "PlaceholderStatement",
												"src": "875:1:8"
											}
										]
									},
									"id": 974,
									"name": "requireBalance",
									"nameLocation": "698:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "718:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "713:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:13:8"
									},
									"src": "689:194:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "951:151:8",
										"statements": [
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "961:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 983,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "970:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "979:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "985:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "979:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "970:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "961:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "961:26:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 994,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "1027:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 993,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1020:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1020:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 996,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1035:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1039:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1035:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1047:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 990,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "997:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$578_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1007:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "997:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "997:57:8"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1001,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1064:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"expression": {
																"id": 1002,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1074:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1078:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1074:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1064:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1005,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1089:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1064:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "1064:31:8"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 979,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "944:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 980,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 978,
												"name": "requireBalance",
												"nameLocations": [
													"929:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 974,
												"src": "929:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "929:22:8"
										}
									],
									"name": "withdraw",
									"nameLocation": "898:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "912:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "907:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "907:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:13:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:8"
									},
									"scope": 1052,
									"src": "889:213:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "1184:176:8",
										"statements": [
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1019,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1194:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1020,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1203:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1212:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1218:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1212:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1203:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1194:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1194:26:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1031,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "1260:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1030,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1253:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1253:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1033,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "1268:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1272:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1027,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "1230:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$578_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1240:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "1230:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1230:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1230:49:8"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1037,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1289:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1039,
														"indexExpression": {
															"id": 1038,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "1299:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1289:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1040,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1306:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1289:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1289:23:8"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1043,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "1322:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1046,
														"indexExpression": {
															"expression": {
																"id": 1044,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1332:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1336:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1332:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1322:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1047,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "1347:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1322:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1322:31:8"
											}
										]
									},
									"functionSelector": "6034114a",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1016,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1013,
													"src": "1177:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "requireBalance",
												"nameLocations": [
													"1162:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 974,
												"src": "1162:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1162:22:8"
										}
									],
									"name": "bankTransfer",
									"nameLocation": "1117:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1138:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1130:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1147:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1142:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:25:8"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:0:8"
									},
									"scope": 1052,
									"src": "1108:252:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1053,
							"src": "181:1181:8",
							"usedErrors": [
								181
							],
							"usedEvents": []
						}
					],
					"src": "32:1330:8"
				},
				"id": 8
			}
		}
	}
}